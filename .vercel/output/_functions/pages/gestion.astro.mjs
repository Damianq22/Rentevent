import { c as createComponent, a as createAstro, m as maybeRenderHead, s as spreadAttributes, i as addAttribute, d as renderTemplate, e as renderComponent, u as unescapeHTML, F as Fragment, f as renderScript, r as renderHead, b as renderSlot } from '../chunks/astro/server_CbS3X-6P.mjs';
import 'kleur/colors';
import { getIconData, iconToSVG } from '@iconify/utils';
import 'clsx';
/* empty css                                 */
/* empty css                                   */
import jwt from 'jsonwebtoken';
export { renderers } from '../renderers.mjs';

const icons = {"local":{"prefix":"local","lastModified":1748649143,"icons":{"actualizar":{"body":"<path fill=\"currentColor\" d=\"M22.828 3c-.512 0-1.023.195-1.414.586L19 6l5 5 2.414-2.414a2 2 0 0 0 0-2.828l-2.172-2.172A2 2 0 0 0 22.828 3M17 8 5.26 19.74s.918-.082 1.26.26.06 2.58.48 3 2.644.124 2.963.443c.319.32.297 1.297.297 1.297L22 13zM4 23l-.943 2.672A1 1 0 0 0 3 26a1 1 0 0 0 1 1 1 1 0 0 0 .328-.057l.01-.004.025-.007.006-.004L7 26l-1.5-1.5z\"/>","width":30,"height":30},"add":{"body":"<path fill=\"currentColor\" d=\"M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1\"/>"},"alquiler":{"body":"<g fill=\"#5d6ae5\"><path d=\"M15.84 19.345h.07c1.5.04 2.7 1.26 2.7 2.76 0 1.28-.87 2.35-2.05 2.67v1.12c0 .4-.32.72-.72.72s-.72-.32-.72-.72v-1.12a2.77 2.77 0 0 1-2.05-2.67c0-.4.32-.72.72-.72s.72.32.72.72c0 .74.59 1.33 1.32 1.33s1.33-.6 1.33-1.33-.6-1.33-1.33-1.33h-.07a2.765 2.765 0 0 1-2.69-2.76c0-1.28.87-2.35 2.05-2.67v-1.12c0-.4.32-.72.72-.72s.72.32.72.72v1.12c1.18.32 2.05 1.39 2.05 2.67 0 .4-.32.72-.72.72s-.72-.32-.72-.72c0-.73-.6-1.33-1.33-1.33s-1.33.6-1.33 1.33.6 1.33 1.33 1.33\"/><path d=\"m10.532 5.1 2.786 3.26-.301.336C7.283 9.982 3 15.103 3 21.225c0 5.382 4.368 9.75 9.75 9.75h6.17c5.382 0 9.75-4.367 9.75-9.749.01-6.123-4.273-11.244-10.007-12.53a1.1 1.1 0 0 0-.11-.615l2.37-2.713.153-.236a1.956 1.956 0 0 0-2.892-2.423l-.843-1a2.02 2.02 0 0 0-3.008-.005l-.883.986a1.96 1.96 0 0 0-2.918 2.41m3.799 1.385-1.696-1.96a1.98 1.98 0 0 0 2.365-.5l.8-1.038.888 1.052a1.97 1.97 0 0 0 2.3.513L17.3 6.485zM5 21.225c0-5.988 4.852-10.84 10.84-10.84s10.84 4.852 10.83 10.838v.002a7.753 7.753 0 0 1-7.75 7.75h-6.17A7.753 7.753 0 0 1 5 21.225\"/></g>","width":32,"height":32},"back":{"body":"<path fill=\"#5d6ae5\" d=\"M5 15.59 6.41 17 10 13.41 13.59 17 15 15.59 11.41 12 15 8.41 13.59 7 10 10.59 6.41 7 5 8.41 8.59 12zM2 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h15c.69 0 1.23-.36 1.59-.89L24 12l-5.41-8.12C18.23 3.35 17.69 3 17 3zm0 2h15l4.72 7L17 19H2z\"/>"},"box":{"body":"<g fill=\"none\" stroke=\"#5d6ae5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z\"/><path d=\"m3.3 7 8.7 5 8.7-5M12 22V12\"/></g>"},"carrito":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13 5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-8 2a2 2 0 1 1-4 0 2 2 0 0 1 4 0\"/>"},"categoria":{"body":"<g fill=\"none\" stroke=\"#5d6ae5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><rect width=\"6\" height=\"6\" x=\"3\" y=\"5\" rx=\"1\"/><path d=\"m3 17 2 2 4-4m4-9h8m-8 6h8m-8 6h8\"/></g>"},"client":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 1 1 0 5.292M15 21H3v-1a6 6 0 0 1 12 0zm0 0h6v-1a6 6 0 0 0-9-5.197M13 7a4 4 0 1 1-8 0 4 4 0 0 1 8 0\"/>"},"clock":{"body":"<circle cx=\"24\" cy=\"24\" r=\"20\" fill=\"#00acc1\"/><circle cx=\"24\" cy=\"24\" r=\"16\" fill=\"#eee\"/><path fill=\"currentColor\" d=\"M23 11h2v13h-2z\"/><path fill=\"currentColor\" d=\"M31.285 29.654 29.66 31.28l-6.504-6.504 1.626-1.627z\"/><circle cx=\"24\" cy=\"24\" r=\"2\" fill=\"currentColor\"/><circle cx=\"24\" cy=\"24\" r=\"1\" fill=\"#00acc1\"/>","width":48,"height":48},"dollar-sign":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M30.297 14.411h6.635c.097 1.584 1.431 2.823 3.035 2.823.112 0 .225 0 .322-.007v13.448c-.097-.008-.21-.008-.322-.008-1.611 0-2.96 1.262-3.035 2.861h-6.635m-12.995 0h-6.263c-.068-1.6-1.41-2.86-3.036-2.86q-.157-.002-.292.007V17.227q.135.009.292.007c1.62 0 2.953-1.239 3.035-2.823h6.264\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M30.297 13.005v21.99c0 .079-.015.15-.037.223a.75.75 0 0 1-.712.496H18.05a.75.75 0 0 1-.712-.496.7.7 0 0 1-.037-.223v-21.99c0-.079.015-.15.037-.223a.75.75 0 0 1 .712-.496h11.497a.75.75 0 0 1 .712.496.7.7 0 0 1 .037.223\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M18.04 35.714H6.25a.75.75 0 0 1-.75-.751V13.037a.75.75 0 0 1 .75-.75h11.8m11.498-.001H41.75a.75.75 0 0 1 .749.751v21.926a.75.75 0 0 1-.75.75H29.56\"/><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M30.297 17.678c3.991.024 5.609 3.983 5.609 6.063 0 2.098-1.868 6.128-5.609 6.084m-12.995 0c-4.428 0-5.635-4.3-5.635-6.084 0-1.93 1.01-6.063 5.635-6.063m4.956 9.419c.441.575.995.79 1.765.79h1.066c.992 0 1.796-.807 1.796-1.8h0c0-.995-.804-1.8-1.796-1.8H23.91a1.8 1.8 0 0 1-1.796-1.8h0c0-.995.804-1.8 1.796-1.8h1.066c.77 0 1.324.213 1.765.788m-2.241-.789v-.9m0 9v-.9\"/>","width":48,"height":48},"eliminar":{"body":"<path fill=\"currentColor\" d=\"M13 3a1 1 0 0 0-1.014 1H6a1 1 0 1 0 0 2h18a1 1 0 1 0 0-2h-5.986A1 1 0 0 0 17 3zM6 8v16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8z\"/>","width":30,"height":30},"exit":{"body":"<g fill=\"none\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M10.138 1.815A3 3 0 0 1 14 4.688v14.624a3 3 0 0 1-3.862 2.873l-6-1.8A3 3 0 0 1 2 17.512V6.488a3 3 0 0 1 2.138-2.873zM15 4a1 1 0 0 1 1-1h3a3 3 0 0 1 3 3v1a1 1 0 1 1-2 0V6a1 1 0 0 0-1-1h-3a1 1 0 0 1-1-1m6 12a1 1 0 0 1 1 1v1a3 3 0 0 1-3 3h-3a1 1 0 1 1 0-2h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1M9 11a1 1 0 1 0 0 2h.001a1 1 0 1 0 0-2z\" clip-rule=\"evenodd\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 12h5m0 0-2-2m2 2-2 2\"/></g>"},"glasses":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M7.5 20H6.454c-1.36 0-2.041 0-2.535-.317a2 2 0 0 1-.602-.602C3 18.587 3 17.907 3 16.546c0-.437 0-.655-.046-.865a2 2 0 0 0-.092-.307c-.079-.2-.2-.38-.442-.744L2 14h5.5c.932 0 1.398 0 1.765.152a2 2 0 0 1 1.083 1.083c.152.367.152.833.152 1.765s0 1.398-.152 1.765a2 2 0 0 1-1.083 1.083C8.898 20 8.432 20 7.5 20m9 0h1.046c1.36 0 2.041 0 2.535-.317a2 2 0 0 0 .602-.602c.317-.494.317-1.174.317-2.535 0-.437 0-.655.046-.865q.033-.156.092-.307c.079-.2.2-.38.442-.744L22 14h-5.5c-.932 0-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083c-.152.367-.152.833-.152 1.765s0 1.398.152 1.765a2 2 0 0 0 1.083 1.083c.367.152.833.152 1.765.152m5.5-6-3.474-8.536c-.29-.71-.434-1.066-.634-1.235a.92.92 0 0 0-1.03-.127c-.227.118-.439.43-.862 1.053M2 14l3.474-8.536c.29-.71.434-1.066.634-1.235a.92.92 0 0 1 1.03-.127c.228.118.439.43.862 1.053M10.5 16a1.5 1.5 0 0 1 3 0\" color=\"currentColor\"/>"},"google":{"body":"<path fill=\"#4285F4\" d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\"/><path fill=\"#34A853\" d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\"/><path fill=\"#FBBC05\" d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602z\"/><path fill=\"#EB4335\" d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\"/>","width":256,"height":262},"home":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m3 12 2-2m0 0 7-7 7 7M5 10v10a1 1 0 0 0 1 1h3m10-11 2 2m-2-2v10a1 1 0 0 1-1 1h-3m-6 0a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1m-6 0h6\"/>"},"inbox":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 13V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v7m16 0v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-5m16 0h-2.586a1 1 0 0 0-.707.293l-2.414 2.414a1 1 0 0 1-.707.293h-3.172a1 1 0 0 1-.707-.293l-2.414-2.414A1 1 0 0 0 6.586 13H4\"/>"},"list":{"body":"<g fill=\"none\" stroke=\"#5d6ae5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><rect width=\"7\" height=\"7\" x=\"3\" y=\"3\" rx=\"1\"/><rect width=\"7\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"/><path d=\"M14 4h7m-7 5h7m-7 6h7m-7 5h7\"/></g>"},"logout":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m17 16 4-4m0 0-4-4m4 4H7m6 4v1a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h4a3 3 0 0 1 3 3v1\"/>"},"mail":{"body":"<g fill=\"none\"><path fill=\"#367af2\" d=\"M14 5H2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2z\"/><path fill=\"url(#a)\" d=\"M14 5H2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2z\"/><path fill=\"url(#b)\" d=\"M14 5H2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2z\"/><path fill=\"url(#c)\" fill-opacity=\".75\" d=\"M14 5H2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2z\"/><path fill=\"url(#d)\" fill-opacity=\".7\" d=\"M14 5H2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2z\"/><path fill=\"url(#e)\" d=\"M4 3a2 2 0 0 0-2 2v.84l5.763 3.103a.5.5 0 0 0 .474 0L14 5.84V5a2 2 0 0 0-2-2z\"/><defs><linearGradient id=\"a\" x1=\"9.523\" x2=\"13.026\" y1=\"6.568\" y2=\"12.814\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".228\" stop-color=\"#0094f0\" stop-opacity=\"0\"/><stop offset=\".431\" stop-color=\"#0094f0\"/></linearGradient><linearGradient id=\"b\" x1=\"6.286\" x2=\"2.394\" y1=\"5.842\" y2=\"13.198\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".228\" stop-color=\"#0094f0\" stop-opacity=\"0\"/><stop offset=\".431\" stop-color=\"#0094f0\"/></linearGradient><linearGradient id=\"c\" x1=\"11.164\" x2=\"11.756\" y1=\"9.773\" y2=\"13.726\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#2764e7\" stop-opacity=\"0\"/><stop offset=\"1\" stop-color=\"#2764e7\"/></linearGradient><linearGradient id=\"d\" x1=\"9.857\" x2=\"10.938\" y1=\"5.982\" y2=\"14.034\" gradientUnits=\"userSpaceOnUse\"><stop offset=\".533\" stop-color=\"#ff6ce8\" stop-opacity=\"0\"/><stop offset=\"1\" stop-color=\"#ff6ce8\"/></linearGradient><linearGradient id=\"e\" x1=\"5.565\" x2=\"12.316\" y1=\".507\" y2=\"12.725\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6ce0ff\"/><stop offset=\".462\" stop-color=\"#29c3ff\"/><stop offset=\"1\" stop-color=\"#4894fe\"/></linearGradient></defs></g>","width":16,"height":16},"map-pin":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 18.5 9 17l-6 3V7l6-3 6 3 6-3v7M9 4v13m6-10v5m6.121 8.121a3 3 0 1 0-4.242 0Q17.506 20.749 19 22q1.577-1.335 2.121-1.879M19 18v.01\"/>"},"message":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 8h10M7 12h4m1 8-4-4H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3z\"/>"},"notificacion":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.03 2.03 0 0 1 18 14.158V11a6 6 0 0 0-4-5.659V5a2 2 0 1 0-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 1 1-6 0v-1m6 0H9\"/>"},"palette":{"body":"<path fill=\"#f7e5c6\" d=\"M37.53 12.15a4.52 4.52 0 0 1-.81-4.43 6.94 6.94 0 0 1 3.63-3.63A3.31 3.31 0 0 0 42 1.67s3.3 4.58 1.61 8.47c-1.61 3.69-4 2.82-4 2.82Z\"/><path fill=\"#fff5e3\" d=\"M40.35 4.09a7 7 0 0 0-3.59 3.55 5 5 0 0 1 3.71.08 5 5 0 0 1 3 2.59l.08-.17C45.27 6.25 42 1.67 42 1.67a3.31 3.31 0 0 1-1.65 2.42\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M37.53 12.15a4.52 4.52 0 0 1-.81-4.43 6.94 6.94 0 0 1 3.63-3.63A3.31 3.31 0 0 0 42 1.67s3.3 4.58 1.61 8.47c-1.61 3.69-4 2.82-4 2.82Z\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M39.3 12.73a7.13 7.13 0 0 0 2.28-3.44m-3.26 3.13a6.9 6.9 0 0 1 .44-3.66\"/><path fill=\"#45413c\" d=\"M12.5 45.5a11.5 1.5 0 1 0 23 0 11.5 1.5 0 1 0-23 0\" opacity=\".15\"/><path fill=\"#f0d5a8\" d=\"M21 6.61c-9.67 0-17.5 4.72-17.5 13v.07a3.82 3.82 0 0 0 5.74 3.22l3.12-1.74a1.1 1.1 0 0 1 1.47 1.53l-4.32 7a3.46 3.46 0 0 0 1.39 4.93 19.6 19.6 0 0 0 8.63 2c9.66 0 17.5-6.71 17.5-15S30.69 6.61 21 6.61m-3 26.5c-1.66 0-3-1-3-2.25s1.34-2.25 3-2.25 3 1 3 2.25-1.32 2.25-3 2.25\"/><path fill=\"#f7e5c6\" d=\"M21 9.61c9 0 15.15 5.87 15.91 13.41a13 13 0 0 0 .09-1.41c0-8.28-6.34-15-16-15s-17.5 4.72-17.5 13v.07a3.6 3.6 0 0 0 .16 1.05C4.79 13.62 12.12 9.61 21 9.61\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 6.61c-9.67 0-17.5 4.72-17.5 13v.07a3.82 3.82 0 0 0 5.74 3.22l3.12-1.74a1.1 1.1 0 0 1 1.47 1.53l-4.32 7a3.46 3.46 0 0 0 1.39 4.93 19.6 19.6 0 0 0 8.63 2c9.66 0 17.5-6.71 17.5-15S30.69 6.61 21 6.61m-3 26.5c-1.66 0-3-1-3-2.25s1.34-2.25 3-2.25 3 1 3 2.25-1.32 2.25-3 2.25\"/><path fill=\"#ff6242\" d=\"M25.23 27.36a3.15 2.25 0 1 0 6.3 0 3.15 2.25 0 1 0-6.3 0\"/><path fill=\"#ff8a14\" d=\"M27.03 17.32a2.75 2.29 0 1 0 5.5 0 2.75 2.29 0 1 0-5.5 0\"/><path fill=\"#6dd627\" d=\"M8.53 14.36a2.7 2.25 0 1 0 5.4 0 2.7 2.25 0 1 0-5.4 0\"/><path fill=\"#ffe500\" d=\"M18.02 11.86a2.93 2.25 0 1 0 5.86 0 2.93 2.25 0 1 0-5.86 0\"/><path fill=\"#e04122\" d=\"M28.38 26.48a3.19 3.19 0 0 1 3 1.57 1.7 1.7 0 0 0 .17-.69c0-1.24-1.41-2.25-3.15-2.25s-3.15 1-3.15 2.25a1.7 1.7 0 0 0 .16.69 3.2 3.2 0 0 1 2.97-1.57\"/><path fill=\"#eb6d00\" d=\"M29.78 16.4a2.72 2.72 0 0 1 2.61 1.6 1.9 1.9 0 0 0 .14-.68A2.55 2.55 0 0 0 29.78 15 2.55 2.55 0 0 0 27 17.32a1.7 1.7 0 0 0 .14.68 2.72 2.72 0 0 1 2.64-1.6\"/><path fill=\"#46b000\" d=\"M11.23 13.48a2.68 2.68 0 0 1 2.56 1.57 2 2 0 0 0 .14-.69 2.51 2.51 0 0 0-2.7-2.25 2.51 2.51 0 0 0-2.7 2.25 1.8 1.8 0 0 0 .14.69 2.67 2.67 0 0 1 2.56-1.57\"/><path fill=\"#ebcb00\" d=\"M21 11a2.94 2.94 0 0 1 2.78 1.57 1.8 1.8 0 0 0 .15-.69c0-1.24-1.31-2.25-2.93-2.25s-3 .99-3 2.23a1.8 1.8 0 0 0 .15.69A2.93 2.93 0 0 1 21 11\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M25.23 27.36a3.15 2.25 0 1 0 6.3 0 3.15 2.25 0 1 0-6.3 0m1.8-10.04a2.75 2.29 0 1 0 5.5 0 2.75 2.29 0 1 0-5.5 0m-18.5-2.96a2.7 2.25 0 1 0 5.4 0 2.7 2.25 0 1 0-5.4 0m9.49-2.5a2.93 2.25 0 1 0 5.86 0 2.93 2.25 0 1 0-5.86 0\"/><path fill=\"#4acfff\" d=\"M37.34 17.16a2.24 2.24 0 0 0-2.71 1.23l-.52 1.19a61 61 0 0 0-3.63 10.87l-2.91 12.47a1.62 1.62 0 0 0 3.08 1L35.38 32a62 62 0 0 0 3.24-11l.25-1.27a2.23 2.23 0 0 0-1.53-2.57\"/><path fill=\"#80ddff\" d=\"m29.35 44 2.91-12.5a62.3 62.3 0 0 1 3.63-10.88l.52-1.18a2.23 2.23 0 0 1 2.16-1.33 2.2 2.2 0 0 0-1.23-.95 2.24 2.24 0 0 0-2.71 1.23l-.52 1.19a61 61 0 0 0-3.63 10.87l-2.91 12.47a1.62 1.62 0 0 0 1.09 1.91 1.6 1.6 0 0 0 .75 0 1.55 1.55 0 0 1-.06-.83\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M37.34 17.16a2.24 2.24 0 0 0-2.71 1.23l-.52 1.19a61 61 0 0 0-3.63 10.87l-2.91 12.47a1.62 1.62 0 0 0 3.08 1L35.38 32a62 62 0 0 0 3.24-11l.25-1.27a2.23 2.23 0 0 0-1.53-2.57\"/><path fill=\"#daedf7\" d=\"M38.52 19.62a.49.49 0 0 0 .65-.43 18 18 0 0 1 .51-3.33 9.3 9.3 0 0 1 1-2.07c.23-.35-.08-.84-.63-1L37.6 12c-.55-.18-1.08.05-1.1.47a9 9 0 0 1-.33 2.29 18 18 0 0 1-1.49 3 .5.5 0 0 0 .29.73Z\"/><path fill=\"#e8f4fa\" d=\"M36.14 18.5a17.7 17.7 0 0 0 1.49-3 9.3 9.3 0 0 0 .37-2.31c0-.42.54-.64 1.09-.47l1.65.52a1.08 1.08 0 0 0-.62-.46L37.6 12c-.56-.18-1.08.05-1.1.47a9 9 0 0 1-.33 2.29 18 18 0 0 1-1.49 3 .5.5 0 0 0 .29.73l1.12.35a.5.5 0 0 1 .05-.34\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M38.52 19.62a.49.49 0 0 0 .65-.43 18 18 0 0 1 .51-3.33 9.3 9.3 0 0 1 1-2.07c.23-.35-.08-.84-.63-1L37.6 12c-.55-.18-1.08.05-1.1.47a9 9 0 0 1-.33 2.29 18 18 0 0 1-1.49 3 .5.5 0 0 0 .29.73Z\"/>","width":48,"height":48},"phone":{"body":"<path fill=\"none\" stroke=\"#306cfe\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M43.75 31.25v8.187a4.166 4.166 0 0 1-4.77 4.167A37.5 37.5 0 0 1 6.541 11.021a4.167 4.167 0 0 1 4.146-4.771h8.062a2.083 2.083 0 0 1 2.083 1.854c.207 2.73.913 5.4 2.084 7.875a2.083 2.083 0 0 1-.875 2.625l-1.792 1.02a2.085 2.085 0 0 0-.687 3.043 29.3 29.3 0 0 0 7.687 7.687 2.083 2.083 0 0 0 3.042-.687l1.02-1.792a2.083 2.083 0 0 1 2.709-.792 22.4 22.4 0 0 0 7.875 2.084 2.083 2.083 0 0 1 1.854 2.083\"/>","width":50,"height":50},"print":{"body":"<path fill=\"#eaeaee\" d=\"M4 6h2v12H4zm3 0h1v12H7zm2 0h3v12H9zm4 0h1v12h-1zm3 0h2v12h-2zm3 0h1v12h-1zM2 4v4H0V4a2 2 0 0 1 2-2h4v2zm20-2a2 2 0 0 1 2 2v4h-2V4h-4V2zM2 16v4h4v2H2a2 2 0 0 1-2-2v-4zm20 4v-4h2v4a2 2 0 0 1-2 2h-4v-2z\"/>"},"profile":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 1 1-8 0 4 4 0 0 1 8 0m-4 7a7 7 0 0 0-7 7h14a7 7 0 0 0-7-7\"/>"},"proveedor":{"body":"<g fill=\"currentColor\"><path d=\"M18.5 3.4c-4.5 4.5-4.5 10.7 0 15.2 6.2 6.2 16.3-1.1 14.1-10.2-1.8-6.9-9.5-9.6-14.1-5m10 2.1c3.3 3.2 3.3 7.8 0 11-1.3 1.4-3.4 2.5-4.5 2.5-3.2 0-7-4.4-7-8s3.8-8 7-8c1.2 0 3.2 1.1 4.5 2.5M17.7 24C13 25.5 8 29.9 5.7 34.6c-3.2 6.7-2.1 7.8 8.7 8.2 5.2.2 8.6-.1 8.6-.7s-3.6-1.1-8.2-1.3c-8.1-.3-8.3-.4-8-2.7.4-3.7 5-9.1 9.6-11.2 5.2-2.3 9.4-2.4 14.8-.2l4.3 1.8-4.5.5-4.5.5v18h21v-18l-4.4-.3c-2.5-.2-5.9-1.4-8.1-2.8-4.2-2.8-12.6-4-17.3-2.4M46 38.5V46H28V31h18z\"/><path d=\"M33 35c0 .5 1.8 1 4 1s4-.5 4-1c0-.6-1.8-1-4-1s-4 .4-4 1\"/></g>","width":48,"height":48},"salir":{"body":"<g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path stroke=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2\"/><path d=\"M9 12h12l-3-3m0 6 3-3\"/></g>"},"service":{"body":"<g fill=\"none\"><path d=\"m12.593 23.258-.011.002-.071.035-.02.004-.014-.004-.071-.035q-.016-.005-.024.005l-.004.01-.017.428.005.02.01.013.104.074.015.004.012-.004.104-.074.012-.016.004-.017-.017-.427q-.004-.016-.017-.018m.265-.113-.013.002-.185.093-.01.01-.003.011.018.43.005.012.008.007.201.093q.019.005.029-.008l.004-.014-.034-.614q-.005-.018-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014-.034.614q.001.018.017.024l.015-.002.201-.093.01-.008.004-.011.017-.43-.003-.012-.01-.01z\"/><path fill=\"currentColor\" d=\"M5 9a7 7 0 0 1 14 0v1.035c1.696.243 3 1.702 3 3.465v.25c0 1.775-1.531 3.331-3.332 3.248-.74 2.12-2.622 3.549-4.653 3.911-.47.172-1.026.091-1.515.091a1.5 1.5 0 0 1 0-3c.793 0 1.671-.115 2.207.609C16.003 17.992 17 16.689 17 15V9A5 5 0 0 0 7 9v6.25A1.75 1.75 0 0 1 5.25 17 3.25 3.25 0 0 1 2 13.75v-.25a3.5 3.5 0 0 1 3-3.465z\"/></g>"},"settings":{"body":"<g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065\"/><path d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0\"/></g>"},"square":{"body":"<path fill=\"currentColor\" d=\"M3 21V3h18v18zm2-2h14V5H5zm0 0V5z\"/>"},"sun":{"body":"<g fill=\"currentColor\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M17 12a5 5 0 1 1-10 0 5 5 0 0 1 10 0m-1.5 0a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0\"/><path d=\"M7.455 3.464A1 1 0 0 1 9.017 2.8l2.337 1.64a1 1 0 0 0 1.164-.01l2.306-1.682a1 1 0 0 1 1.574.635l.492 2.812a1 1 0 0 0 .831.816l2.82.441a1 1 0 0 1 .664 1.563l-1.64 2.336a1 1 0 0 0 .01 1.164l1.683 2.307a1 1 0 0 1-.635 1.574l-2.812.492a1 1 0 0 0-.816.83l-.441 2.821a1 1 0 0 1-1.563.664l-2.336-1.64a1 1 0 0 0-1.164.01l-2.307 1.683a1 1 0 0 1-1.574-.636l-.492-2.812a1 1 0 0 0-.83-.816l-2.821-.44a1 1 0 0 1-.664-1.563l1.64-2.337a1 1 0 0 0-.01-1.164L2.75 9.182a1 1 0 0 1 .636-1.574l2.812-.493a1 1 0 0 0 .815-.83zm1.04 3.053.317-2.028 1.68 1.18a2.5 2.5 0 0 0 2.91-.027l1.657-1.21.354 2.022a2.5 2.5 0 0 0 2.076 2.039l2.027.317-1.179 1.68a2.5 2.5 0 0 0 .027 2.91l1.209 1.657-2.021.354a2.5 2.5 0 0 0-2.04 2.076l-.316 2.027-1.68-1.179a2.5 2.5 0 0 0-2.91.026l-1.657 1.21-.354-2.022a2.5 2.5 0 0 0-2.076-2.038l-2.027-.318 1.179-1.679a2.5 2.5 0 0 0-.027-2.91L4.435 8.947l2.021-.354a2.5 2.5 0 0 0 2.04-2.076\"/></g>"},"task":{"body":"<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2M9 5a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"/>"}},"width":24,"height":24}};

const cache = /* @__PURE__ */ new WeakMap();

const $$Astro$2 = createAstro();
const $$Icon = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$Icon;
  class AstroIconError extends Error {
    constructor(message) {
      super(message);
      this.hint = "";
    }
  }
  const req = Astro2.request;
  const { name = "", title, desc, "is:inline": inline = false, ...props } = Astro2.props;
  const map = cache.get(req) ?? /* @__PURE__ */ new Map();
  const i = map.get(name) ?? 0;
  map.set(name, i + 1);
  cache.set(req, map);
  const includeSymbol = !inline && i === 0;
  let [setName, iconName] = name.split(":");
  if (!setName && iconName) {
    const err = new AstroIconError(`Invalid "name" provided!`);
    throw err;
  }
  if (!iconName) {
    iconName = setName;
    setName = "local";
    if (!icons[setName]) {
      const err = new AstroIconError('Unable to load the "local" icon set!');
      throw err;
    }
    if (!(iconName in icons[setName].icons)) {
      const err = new AstroIconError(`Unable to locate "${name}" icon!`);
      throw err;
    }
  }
  const collection = icons[setName];
  if (!collection) {
    const err = new AstroIconError(`Unable to locate the "${setName}" icon set!`);
    throw err;
  }
  const iconData = getIconData(collection, iconName ?? setName);
  if (!iconData) {
    const err = new AstroIconError(`Unable to locate "${name}" icon!`);
    throw err;
  }
  const id = `ai:${collection.prefix}:${iconName ?? setName}`;
  if (props.size) {
    props.width = props.size;
    props.height = props.size;
    delete props.size;
  }
  const renderData = iconToSVG(iconData);
  const normalizedProps = { ...renderData.attributes, ...props };
  const normalizedBody = renderData.body;
  const { viewBox } = normalizedProps;
  if (includeSymbol) {
    delete normalizedProps.viewBox;
  }
  return renderTemplate`${maybeRenderHead()}<svg${spreadAttributes(normalizedProps)}${addAttribute(name, "data-icon")}> ${title && renderTemplate`<title>${title}</title>`} ${desc && renderTemplate`<desc>${desc}</desc>`} ${inline ? renderTemplate`${renderComponent($$result, "Fragment", Fragment, { "id": id }, { "default": ($$result2) => renderTemplate`${unescapeHTML(normalizedBody)}` })}` : renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": ($$result2) => renderTemplate`${includeSymbol && renderTemplate`<symbol${addAttribute(id, "id")}${addAttribute(viewBox, "viewBox")}>${unescapeHTML(normalizedBody)}</symbol>`}<use${addAttribute(`#${id}`, "href")}></use> ` })}`} </svg>`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/node_modules/astro-icon/components/Icon.astro", void 0);

const $$GestionCliente = createComponent(async ($$result, $$props, $$slots) => {
  const response = await fetch("http://localhost:5183/api/Clientes");
  let clientes = [];
  if (response.ok) {
    clientes = await response.json();
  } else {
    console.error("Error obteniendo clientes:", response.statusText);
  }
  return renderTemplate`${maybeRenderHead()}<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <div class="flex items-center justify-between"> <!-- Contenedor para botones e input --> <div class="flex items-center justify-between w-full"> <!-- Botones --> <div class="flex items-center space-x-2"> <button id="agregarCliente" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300"> ${renderComponent($$result, "Icon", $$Icon, { "name": "add", "class": "w-6 h-6 mr-2 flex items-center text-[#29b73a96]" })}
Agregar
</button> </div> <!-- Input de búsqueda --> <div class="relative ml-auto"> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Buscar Cliente"> </div> </div> </div> <!-- Tabla de clientes --> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 mt-2"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="p-4"> ${renderComponent($$result, "Icon", $$Icon, { "name": "square" })} </th> <th scope="col" class="px-6 py-3">Cédula</th> <th scope="col" class="px-6 py-3">Nombre</th> <th scope="col" class="px-6 py-3">Teléfono</th> <th scope="col" class="px-6 py-3">Dirección</th> <th scope="col" class="px-6 py-3">Acciones</th> </tr> </thead> <tbody id="clienteTable"> ${clientes.length > 0 ? clientes.map((cliente) => renderTemplate`<tr class="border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400"> <td class="w-4 p-4"> <input type="checkbox" class="form-checkbox clienteCheckbox"${addAttribute(cliente.id, "data-id")}> </td> <td class="px-6 py-4 text-black">${cliente.id}</td> <td class="px-6 py-4 text-black font-semibold"> ${cliente.nombre} </td> <td class="px-6 py-4 text-black">${cliente.telefono}</td> <td class="px-6 py-4 text-black">${cliente.direccion}</td> <td class="px-6 py-4"> <button class="text-blue-600 hover:text-blue-900 mr-3 editar-btn"${addAttribute(cliente.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "actualizar", "class": "w-5 h-5" })} </button> <button class="text-red-600 hover:text-red-900 eliminar-btn"${addAttribute(cliente.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "eliminar", "class": "w-5 h-5" })} </button> </td> </tr>`) : renderTemplate`<tr> <td colspan="6" class="px-6 py-4 text-center">
No se encontraron clientes
</td> </tr>`} </tbody> </table> </div> <!-- Modal para agregar cliente --> <div id="modalAgregar" class="fixed inset-0 z-50 flex items-center justify-center border-black backdrop-blur-sm hidden"> <div class="bg-white p-5 rounded-lg w-full max-w-md border border-gray-800"> <h3 class="text-xl font-semibold mb-6 text-black text-center">
Agregar Cliente
</h3> <form id="formAgregarCliente"> <div class="space-y-4"> <!-- Cédula --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Cédula</label> <input type="number" name="id" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Nombre --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Nombre</label> <input type="text" name="nombre" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Teléfono --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label> <input type="tel" name="telefono" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Dirección --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Dirección</label> <input type="text" name="direccion" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> </div> <!-- Botones --> <div class="flex justify-end mt-6 space-x-3"> <button type="button" id="cancelarModal" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
Cancelar
</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
Guardar
</button> </div> </form> </div> </div> <!-- Modal para editar cliente --> <div id="modalEditar" class="fixed inset-0 z-50 flex items-center justify-center border-black backdrop-blur-sm hidden"> <div class="bg-white p-5 rounded-lg w-full max-w-md border border-gray-800"> <h3 class="text-xl font-semibold mb-6 text-black text-center">
Editar Cliente
</h3> <form id="formEditarCliente"> <input type="hidden" name="id" id="editClienteId"> <div class="space-y-4"> <!-- Nombre --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Nombre</label> <input type="text" name="nombre" id="editClienteNombre" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Teléfono --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label> <input type="tel" name="telefono" id="editClienteTelefono" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Dirección --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Dirección</label> <input type="text" name="direccion" id="editClienteDireccion" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> </div> <!-- Botones --> <div class="flex justify-end mt-6 space-x-3"> <button type="button" id="cancelarModalEditar" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
Cancelar
</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
Actualizar
</button> </div> </form> </div> </div> ${renderScript($$result, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionCliente.astro?astro&type=script&index=0&lang.ts")}`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionCliente.astro", void 0);

var __freeze$1 = Object.freeze;
var __defProp$1 = Object.defineProperty;
var __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(raw || cooked.slice()) }));
var _a$1;
const $$GestionFacturas = createComponent(async ($$result, $$props, $$slots) => {
  const response = await fetch(
    "http://localhost:5183/api/AlquileresControllerDTO/con-detalles"
  );
  let alquileres = [];
  if (response.ok) {
    alquileres = await response.json();
  } else {
    console.error("Error obteniendo alquileres:", response.statusText);
  }
  const estados = ["Todos", "Alquilado", "Pendiente", "Devuelto"];
  return renderTemplate(_a$1 || (_a$1 = __template$1(["", '<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <div class="flex items-center justify-between mb-4"> <!-- Filtros --> <div class="flex flex-wrap gap-4"> <!-- Filtro por estado --> <div class="flex items-center space-x-2"> <label class="text-sm font-medium text-gray-700">Estado:</label> <select id="filtroEstado" class="p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500"> ', ' </select> </div> <!-- Filtro por fecha entrega --> <div class="flex items-center space-x-2"> <label class="text-sm font-medium text-gray-700">Desde:</label> <input type="date" id="filtroFechaDesde" class="p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500"> </div> <!-- Filtro por fecha devoluci\xF3n --> <div class="flex items-center space-x-2"> <label class="text-sm font-medium text-gray-700">Hasta:</label> <input type="date" id="filtroFechaHasta" class="p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500"> </div> <!-- Bot\xF3n aplicar filtros --> </div> <!-- Buscador --> <div class="relative ml-auto"> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Buscar Alquiler"> </div> </div> <!-- Tabla de alquileres --> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="px-6 py-3">ID</th> <th scope="col" class="px-6 py-3">Cliente</th> <th scope="col" class="px-6 py-3">Art\xEDculo</th> <th scope="col" class="px-6 py-3">Fechas</th> <th scope="col" class="px-6 py-3">Cantidad</th> <th scope="col" class="px-6 py-3">Total</th> <th scope="col" class="px-6 py-3">Estado</th> </tr> </thead> <tbody id="alquilerTable"> ', ' </tbody> </table> </div> <div id="modalMalEstado" class="fixed inset-0 flex items-center justify-center border backdrop-blur-sm hidden z-50"> <div class="bg-white rounded-lg p-6 w-96 shadow-xl border border-gray-800"> <h2 class="text-lg font-semibold text-gray-700 mb-4">\nArt\xEDculos en mal estado\n</h2> <form id="formReporte"> <input type="hidden" id="modalAlquilerId"> <input type="hidden" id="modalArticuloId"> <div class="mb-4"> <label class="block text-sm font-medium text-gray-700 mb-1">\nCantidad da\xF1ada (M\xE1x: <span id="maxCantidad">0</span>):\n</label> <input type="number" id="modalCantidad" min="-1" class="w-full p-2 border border-gray-300 rounded-md" required> <p id="cantidadError" class="text-red-500 text-sm hidden mt-1"></p> </div> <div class="flex justify-end gap-2"> <button type="button" id="btnCancelar" class="px-4 py-2 bg-gray-300 text-black rounded hover:bg-gray-400">\nCancelar\n</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">\nEnviar\n</button> </div> </form> </div> </div> ', ' <script type="module">\n  document.addEventListener("DOMContentLoaded", () => {\n    const modal = document.getElementById("modalMalEstado");\n    const inputCantidad = document.getElementById("modalCantidad");\n    const inputAlquilerId = document.getElementById("modalAlquilerId");\n    const inputArticuloId = document.getElementById("modalArticuloId");\n    const maxCantidadSpan = document.getElementById("maxCantidad");\n    const errorCantidad = document.getElementById("cantidadError");\n\n    document.querySelectorAll(".abrir-modal").forEach((btn) => {\n      btn.addEventListener("click", () => {\n        const alquilerId = btn.dataset.id;\n        const articuloId = btn.dataset.articuloId;\n        const max = btn.dataset.max;\n\n        inputAlquilerId.value = alquilerId;\n        inputArticuloId.value = articuloId;\n        inputCantidad.value = "";\n        inputCantidad.max = max;\n        maxCantidadSpan.textContent = max;\n        errorCantidad.classList.add("hidden");\n        modal.classList.remove("hidden");\n      });\n    });\n\n    document\n      .getElementById("formReporte")\n      .addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        const cantidadDanada = parseInt(\n          document.getElementById("modalCantidad").value\n        );\n        const maxCantidad = parseInt(\n          document.getElementById("maxCantidad").textContent\n        );\n        const alquilerId = document.getElementById("modalAlquilerId").value;\n        const articuloId = document.getElementById("modalArticuloId").value;\n\n        if (cantidadDanada > maxCantidad || cantidadDanada < 0) {\n          document.getElementById("cantidadError").textContent =\n            `La cantidad da\xF1ada no puede superar la cantidad alquilada (${maxCantidad}).`;\n          document.getElementById("cantidadError").classList.remove("hidden");\n          return;\n        }\n\n        const cantidadNoDanada = maxCantidad - cantidadDanada;\n\n        const body = {\n          alquilerId,\n          articuloId,\n          cantidadDanada,\n          cantidadNoDanada,\n        };\n\n        try {\n          const res = await fetch(\n            "http://localhost:5183/api/AlquileresControllerDTO/reportar-danado",\n            {\n              method: "POST",\n              headers: {\n                "Content-Type": "application/json",\n              },\n              body: JSON.stringify(body),\n            }\n          );\n\n          if (res.ok) {\n            alert("Reporte enviado con \xE9xito.");\n            location.reload();\n          } else {\n            alert("Error al enviar el reporte.");\n          }\n        } catch (err) {\n          console.error(err);\n          alert("Error de conexi\xF3n.");\n        }\n      });\n\n    document.getElementById("btnCancelar").addEventListener("click", () => {\n      modal.classList.add("hidden");\n    });\n  });\n<\/script>'], ["", '<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <div class="flex items-center justify-between mb-4"> <!-- Filtros --> <div class="flex flex-wrap gap-4"> <!-- Filtro por estado --> <div class="flex items-center space-x-2"> <label class="text-sm font-medium text-gray-700">Estado:</label> <select id="filtroEstado" class="p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500"> ', ' </select> </div> <!-- Filtro por fecha entrega --> <div class="flex items-center space-x-2"> <label class="text-sm font-medium text-gray-700">Desde:</label> <input type="date" id="filtroFechaDesde" class="p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500"> </div> <!-- Filtro por fecha devoluci\xF3n --> <div class="flex items-center space-x-2"> <label class="text-sm font-medium text-gray-700">Hasta:</label> <input type="date" id="filtroFechaHasta" class="p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500"> </div> <!-- Bot\xF3n aplicar filtros --> </div> <!-- Buscador --> <div class="relative ml-auto"> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Buscar Alquiler"> </div> </div> <!-- Tabla de alquileres --> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="px-6 py-3">ID</th> <th scope="col" class="px-6 py-3">Cliente</th> <th scope="col" class="px-6 py-3">Art\xEDculo</th> <th scope="col" class="px-6 py-3">Fechas</th> <th scope="col" class="px-6 py-3">Cantidad</th> <th scope="col" class="px-6 py-3">Total</th> <th scope="col" class="px-6 py-3">Estado</th> </tr> </thead> <tbody id="alquilerTable"> ', ' </tbody> </table> </div> <div id="modalMalEstado" class="fixed inset-0 flex items-center justify-center border backdrop-blur-sm hidden z-50"> <div class="bg-white rounded-lg p-6 w-96 shadow-xl border border-gray-800"> <h2 class="text-lg font-semibold text-gray-700 mb-4">\nArt\xEDculos en mal estado\n</h2> <form id="formReporte"> <input type="hidden" id="modalAlquilerId"> <input type="hidden" id="modalArticuloId"> <div class="mb-4"> <label class="block text-sm font-medium text-gray-700 mb-1">\nCantidad da\xF1ada (M\xE1x: <span id="maxCantidad">0</span>):\n</label> <input type="number" id="modalCantidad" min="-1" class="w-full p-2 border border-gray-300 rounded-md" required> <p id="cantidadError" class="text-red-500 text-sm hidden mt-1"></p> </div> <div class="flex justify-end gap-2"> <button type="button" id="btnCancelar" class="px-4 py-2 bg-gray-300 text-black rounded hover:bg-gray-400">\nCancelar\n</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">\nEnviar\n</button> </div> </form> </div> </div> ', ' <script type="module">\n  document.addEventListener("DOMContentLoaded", () => {\n    const modal = document.getElementById("modalMalEstado");\n    const inputCantidad = document.getElementById("modalCantidad");\n    const inputAlquilerId = document.getElementById("modalAlquilerId");\n    const inputArticuloId = document.getElementById("modalArticuloId");\n    const maxCantidadSpan = document.getElementById("maxCantidad");\n    const errorCantidad = document.getElementById("cantidadError");\n\n    document.querySelectorAll(".abrir-modal").forEach((btn) => {\n      btn.addEventListener("click", () => {\n        const alquilerId = btn.dataset.id;\n        const articuloId = btn.dataset.articuloId;\n        const max = btn.dataset.max;\n\n        inputAlquilerId.value = alquilerId;\n        inputArticuloId.value = articuloId;\n        inputCantidad.value = "";\n        inputCantidad.max = max;\n        maxCantidadSpan.textContent = max;\n        errorCantidad.classList.add("hidden");\n        modal.classList.remove("hidden");\n      });\n    });\n\n    document\n      .getElementById("formReporte")\n      .addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        const cantidadDanada = parseInt(\n          document.getElementById("modalCantidad").value\n        );\n        const maxCantidad = parseInt(\n          document.getElementById("maxCantidad").textContent\n        );\n        const alquilerId = document.getElementById("modalAlquilerId").value;\n        const articuloId = document.getElementById("modalArticuloId").value;\n\n        if (cantidadDanada > maxCantidad || cantidadDanada < 0) {\n          document.getElementById("cantidadError").textContent =\n            \\`La cantidad da\xF1ada no puede superar la cantidad alquilada (\\${maxCantidad}).\\`;\n          document.getElementById("cantidadError").classList.remove("hidden");\n          return;\n        }\n\n        const cantidadNoDanada = maxCantidad - cantidadDanada;\n\n        const body = {\n          alquilerId,\n          articuloId,\n          cantidadDanada,\n          cantidadNoDanada,\n        };\n\n        try {\n          const res = await fetch(\n            "http://localhost:5183/api/AlquileresControllerDTO/reportar-danado",\n            {\n              method: "POST",\n              headers: {\n                "Content-Type": "application/json",\n              },\n              body: JSON.stringify(body),\n            }\n          );\n\n          if (res.ok) {\n            alert("Reporte enviado con \xE9xito.");\n            location.reload();\n          } else {\n            alert("Error al enviar el reporte.");\n          }\n        } catch (err) {\n          console.error(err);\n          alert("Error de conexi\xF3n.");\n        }\n      });\n\n    document.getElementById("btnCancelar").addEventListener("click", () => {\n      modal.classList.add("hidden");\n    });\n  });\n<\/script>'])), maybeRenderHead(), estados.map((estado) => renderTemplate`<option${addAttribute(estado, "value")}>${estado}</option>`), alquileres.length > 0 ? alquileres.map((alquiler) => renderTemplate`<tr class="border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400"> <td class="px-6 py-4 text-black font-semibold"> ${alquiler.alquilerId} </td> <td class="px-6 py-4"> <div class="text-black font-semibold"> ${alquiler.clienteNombre} </div> <div class="text-gray-500">Tel: ${alquiler.clienteTelefono}</div> </td> <td class="px-6 py-4"> <div class="text-black font-semibold"> ${alquiler.articuloDescripcion} </div> <div class="text-gray-500">
Proveedor: ${alquiler.proveedorNombre} </div> <div class="text-gray-500">
Categoría: ${alquiler.categoriaDescripcion} </div> </td> <td class="px-6 py-4"> <div class="text-black">
Entrega:${" "} ${new Date(alquiler.fechaEntrega).toLocaleDateString()} </div> <div class="text-black">
Devolución:${" "} ${new Date(alquiler.fechaDevolucion).toLocaleDateString()} </div> </td> <td class="px-6 py-4 text-black">${alquiler.cantidad}</td> <td class="px-6 py-4 text-black">
$${alquiler.totalPago.toLocaleString()} </td> <td class="px-6 py-4"> <span${addAttribute(`px-2 py-1 rounded-full text-xs font-semibold ${alquiler.estado === "Devuelto" ? "bg-green-100 text-green-800" : alquiler.estado === "Alquilado" ? "bg-blue-100 text-blue-800" : "bg-yellow-100 text-yellow-800"}`, "class")}> ${alquiler.estado} </span> ${alquiler.estado === "Pendiente" && renderTemplate`<button class="ml-2 px-2 py-1 bg-red-500 text-white text-xs hover:bg-red-600 abrir-modal rounded-4xl"${addAttribute(alquiler.alquilerId, "data-id")}${addAttribute(alquiler.articuloId, "data-articulo-id")}${addAttribute(alquiler.cantidad, "data-max")}>
Reportar
</button>`} </td> </tr>`) : renderTemplate`<tr> <td colspan="8" class="px-6 py-4 text-center">
No se encontraron alquileres
</td> </tr>`, renderScript($$result, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionFacturas.astro?astro&type=script&index=0&lang.ts"));
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionFacturas.astro", void 0);

const $$GestionProveedor = createComponent(async ($$result, $$props, $$slots) => {
  const response = await fetch("http://localhost:5183/api/Proveedores");
  let proveedores = [];
  if (response.ok) {
    proveedores = await response.json();
  } else {
    console.error("Error obteniendo proveedores:", response.statusText);
  }
  return renderTemplate`${maybeRenderHead()}<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <div class="flex items-center justify-between"> <!-- Contenedor para botones e input --> <div class="flex items-center justify-between w-full"> <!-- Botones --> <div class="flex items-center space-x-2"> <button id="agregarProveedor" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300"> ${renderComponent($$result, "Icon", $$Icon, { "name": "add", "class": "w-6 h-6 mr-2 flex items-center text-[#29b73a96]" })}
Agregar
</button> </div> <!-- Input de búsqueda --> <div class="relative ml-auto"> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Buscar Proveedor"> </div> </div> </div> <!-- Tabla de proveedores --> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 mt-2"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="p-4"> ${renderComponent($$result, "Icon", $$Icon, { "name": "square" })} </th> <th scope="col" class="px-6 py-3">Nombre</th> <th scope="col" class="px-6 py-3">Teléfono</th> <th scope="col" class="px-6 py-3">Acciones</th> </tr> </thead> <tbody id="proveedorTable"> ${proveedores.length > 0 ? proveedores.map((proveedor) => renderTemplate`<tr class="border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400"> <td class="w-4 p-4"> <input type="checkbox" class="form-checkbox proveedorCheckbox"${addAttribute(proveedor.id, "data-id")}> </td> <td class="px-6 py-4 text-black font-semibold"> ${proveedor.nombre} </td> <td class="px-6 py-4 text-black">${proveedor.telefono}</td> <td class="px-6 py-4"> <button class="text-blue-600 hover:text-blue-900 mr-3 editar-btn"${addAttribute(proveedor.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "actualizar", "class": "w-5 h-5" })} </button> <button class="text-red-600 hover:text-red-900 eliminar-btn"${addAttribute(proveedor.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "eliminar", "class": "w-5 h-5" })} </button> </td> </tr>`) : renderTemplate`<tr> <td colspan="4" class="px-6 py-4 text-center">
No se encontraron proveedores
</td> </tr>`} </tbody> </table> </div> <!-- Modal para agregar proveedor --> <div id="modalAgregar" class="fixed inset-0 z-50 flex items-center backdrop-blur-sm border justify-center hidden"> <div class="bg-white p-5 rounded-lg w-full max-w-md border border-gray-800"> <h3 class="text-xl font-semibold mb-6 text-black text-center">
Agregar Proveedor
</h3> <form id="formAgregarProveedor"> <div class="space-y-4"> <!-- Nombre --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Nombre</label> <input type="text" name="nombre" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Teléfono --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label> <input type="tel" name="telefono" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> </div> <!-- Botones --> <div class="flex justify-end mt-6 space-x-3"> <button type="button" id="cancelarModal" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
Cancelar
</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
Guardar
</button> </div> </form> </div> </div> <!-- Modal para editar proveedor --> <div id="modalEditar" class="fixed inset-0 z-50 flex items-center justify-center border-2 backdrop-blur-sm hidden"> <div class="bg-white p-5 rounded-lg w-full max-w-md border border-gray-800"> <h3 class="text-xl font-semibold mb-6 text-black text-center">
Editar Proveedor
</h3> <form id="formEditarProveedor"> <input type="hidden" name="id" id="editProveedorId"> <div class="space-y-4"> <!-- Nombre --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Nombre</label> <input type="text" name="nombre" id="editProveedorNombre" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Teléfono --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label> <input type="tel" name="telefono" id="editProveedorTelefono" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> </div> <!-- Botones --> <div class="flex justify-end mt-6 space-x-3"> <button type="button" id="cancelarModalEditar" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
Cancelar
</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
Actualizar
</button> </div> </form> </div> </div> ${renderScript($$result, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionProveedor.astro?astro&type=script&index=0&lang.ts")}`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionProveedor.astro", void 0);

const $$GestionUsuario = createComponent(async ($$result, $$props, $$slots) => {
  const res = await fetch("http://localhost:5183/api/Usuario");
  const usuarios = await res.json();
  return renderTemplate`${maybeRenderHead()}<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <div class="flex items-center justify-between"> <!-- Contenedor para botones e input --> <div class="flex items-center justify-between w-full"> <!-- Botones --> <div class="flex items-center space-x-2"> <button id="agregarUsuario" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300"> ${renderComponent($$result, "Icon", $$Icon, { "name": "add", "class": "w-6 h-6 mr-2 flex items-center text-[#29b73a96]" })}
Agregar
</button> </div> </div> </div> <!-- aqui Inicia la Tabla con la Indectacion de los Usuarios --> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 mt-2"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="p-4"> ${renderComponent($$result, "Icon", $$Icon, { "name": "square" })} </th> <th scope="col" class="px-9 py-3">Id</th> <th scope="col" class="px-6 py-3">Nombre</th> <th scope="col" class="px-6 py-3">Usuario</th> </tr> </thead> <tbody id="userTable"> ${usuarios.length > 0 ? usuarios.map((usuario) => renderTemplate`<tr class=" border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400"> <td class="w-4 p-4"> <input type="checkbox" class="form-checkbox userCheckbox"${addAttribute(usuario.id, "data-id")}> </td> <td class="px-9 py-4 text-black">${usuario.id}</td> <td class="px-6 py-4 text-black">${usuario.nombre}</td> <td class="px-6 py-4 text-black">${usuario.usuario}</td> </tr>`) : renderTemplate`<tr> <td colspan="4" class="px-6 py-4 text-center">
No users found.
</td> </tr>`} </tbody> </table> </div> <!-- Modal para agregar usuario --> <div id="modalAgregar" class="fixed inset-0 z-50 flex items-center justify-center border-black border-2 backdrop-blur-sm hidden transition-opacity duration-300"> <div class="bg-gradient-to-br from-white to-gray-50 p-6 rounded-xl shadow-2xl w-full max-w-2xl border border-gray-800 transform transition-all duration-300 scale-95 hover:scale-100"> <div class="flex justify-between items-center mb-4"> <h3 class="text-2xl font-bold text-gray-800">Agregar Nuevo Usuario</h3> <button id="cancelarModal" class="text-gray-500 hover:text-gray-700"> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path> </svg> </button> </div> <form id="formAgregarUsuario" class="space-y-4"> <div class="grid grid-cols-1 sm:grid-cols-2 gap-4"> <!-- Nombre --> <div class="space-y-1"> <label class="block text-sm font-medium text-gray-700">Nombre</label> <input type="text" name="nombre" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all" placeholder="Nombre completo" required> </div> <!-- Usuario --> <div class="space-y-1"> <label class="block text-sm font-medium text-gray-700">Usuario</label> <input type="text" name="usuario" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all" placeholder="Nombre de usuario" required autocomplete="username"> </div> <!-- Contraseña --> <div class="space-y-1"> <label class="block text-sm font-medium text-gray-700">Contraseña</label> <div class="relative"> <input type="password" name="contraseña" id="passwordField" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all" placeholder="••••••••" required autocomplete="new-password"> <button type="button" id="togglePassword" class="absolute right-3 top-2.5 text-gray-500 hover:text-gray-700"> <svg id="eyeIcon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"> <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path> <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path> </svg> </button> </div> </div> <!-- Confirmar Contraseña --> <div class="space-y-1"> <label class="block text-sm font-medium text-gray-700">Confirmar Contraseña</label> <input type="password" name="confirmar_contraseña" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all" placeholder="••••••••" required autocomplete="new-password"> </div> </div> <!-- Botones --> <div class="flex justify-end space-x-3 pt-4"> <button type="button" id="closeModalBtn" class="px-5 py-2.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors">
Cancelar
</button> <button type="submit" class="px-5 py-2.5 text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-300 shadow-sm transition-all"> <span id="submitText">Guardar Usuario</span> <span id="loadingSpinner" class="hidden ml-2"> <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"> <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle> <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path> </svg> </span> </button> </div> </form> </div> </div> ${renderScript($$result, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionUsuario.astro?astro&type=script&index=0&lang.ts")}`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionUsuario.astro", void 0);

const $$Astro$1 = createAstro();
const $$Sidebar = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Sidebar;
  const { currentView } = Astro2.props;
  const isActive = (view) => {
    if (!currentView && view === "gestion-usuarios") return true;
    return currentView === view;
  };
  return renderTemplate`${maybeRenderHead()}<div class="flex flex-col bg-gray-50 text-gray-800 font-sans"> <div class="fixed flex flex-col top-0 left-0 w-64 bg-white h-full border-r shadow-sm"> <div class="bg-gray-950 flex items-center justify-center h-16 border-b"> <h1 class="text-3xl sm:text-4xl md:text-4xl font-extrabold text-pink-600 tracking-tight text-center uppercase drop-shadow-md">
Rent4<span class="text-pink-400">Even</span> </h1> </div> <div class="overflow-y-auto overflow-x-hidden flex-grow px-2 py-4"> <ul class="space-y-1"> <!-- Sección: Menu --> <li class="px-4 text-xs text-gray-400 font-semibold uppercase tracking-wider mb-2">
Menu
</li> <li> <a href="/gestion?view=gestion-categorias"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-categorias") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "categoria", "class": "w-5 h-5 text-indigo-600" })}
Categorias
</a> </li> <li> <a href="/gestion?view=gestion-articulos"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-articulos") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "list", "class": "w-5 h-5 text-indigo-600" })}
Articulos
</a> </li> <li> <a href="/gestion?view=gestion-alquileres"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-alquileres") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "alquiler", "class": "w-5 h-5 text-indigo-600" })}
Alquileres
</a> </li> <!-- Sección: Tasks --> <li class="px-4 mt-4 text-xs text-gray-400 font-semibold uppercase tracking-wider mb-2">
Acciones
</li> <li> <a href="/gestion?view=gestion-usuarios"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-usuarios") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "profile", "class": "w-5 h-5 text-indigo-600" })}
Usuarios
</a> </li> <li> <a href="/gestion?view=gestion-facturas"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-facturas") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "task", "class": "w-5 h-5 text-indigo-600" })}
Facturas
</a> </li> <li> <a href="/gestion?view=gestion-clientes"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-clientes") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "client", "class": "w-5 h-5 text-indigo-600" })}
Clientes
</a> </li> <li> <a href="/gestion?view=gestion-proveedores"${addAttribute(`flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium transition 
            ${isActive("gestion-proveedores") ? "bg-green-100 text-green-600 font-semibold" : "text-black hover:bg-gray-100"}`, "class")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "proveedor", "class": "w-5 h-5 text-indigo-600" })}
Proveedores
</a> </li> <!-- Sección: Settings --> <li class="px-4 mt-4 text-xs text-gray-400 font-semibold uppercase tracking-wider mb-2">
Session
</li> <li> <a href="/logout" class="flex items-center gap-3 h-11 px-4 rounded-lg text-sm font-medium text-red-600 hover:bg-red-50 hover:text-red-700 transition"> ${renderComponent($$result, "Icon", $$Icon, { "name": "logout", "class": "w-5 h-5 text-red-500" })}
Logout
</a> </li> </ul> </div> </div> </div>`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/UI/Sidebar.astro", void 0);

const $$LayoutGestion = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`<html lang="es" data-astro-cid-z7fdj4si> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><title>Rent4Even</title>${renderHead()}</head> <body data-astro-cid-z7fdj4si> ${renderSlot($$result, $$slots["default"])} </body></html>`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/layouts/LayoutGestion.astro", void 0);

const $$GestionCategoria = createComponent(async ($$result, $$props, $$slots) => {
  const response = await fetch("http://localhost:5183/api/Categorias");
  let categorias = [];
  if (response.ok) {
    categorias = await response.json();
  } else {
    console.error("Error obteniendo categor\xEDas:", response.statusText);
  }
  return renderTemplate`${maybeRenderHead()}<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <div class="flex items-center justify-between"> <!-- Contenedor para botones e input --> <div class="flex items-center justify-between w-full"> <!-- Botones --> <div class="flex items-center space-x-2"> <button id="agregarCategoria" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300"> ${renderComponent($$result, "Icon", $$Icon, { "name": "add", "class": "w-6 h-6 mr-2 flex items-center text-[#29b73a96]" })}
Agregar
</button> </div> <!-- Input de búsqueda --> <div class="relative ml-auto"> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Buscar Categoría"> </div> </div> </div> <!-- Tabla de categorías --> <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 mt-2"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="p-4"> ${renderComponent($$result, "Icon", $$Icon, { "name": "square" })} </th> <th scope="col" class="px-6 py-3">ID</th> <th scope="col" class="px-6 py-3">Descripción</th> <th scope="col" class="px-6 py-3">Acciones</th> </tr> </thead> <tbody id="categoriaTable"> ${categorias.length > 0 ? categorias.map((categoria) => renderTemplate`<tr class="border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400"> <td class="w-4 p-4"> <input type="checkbox" class="form-checkbox categoriaCheckbox"${addAttribute(categoria.id, "data-id")}> </td> <td class="px-6 py-4 text-black">${categoria.id}</td> <td class="px-6 py-4 text-black">${categoria.descripcion}</td> <td class="px-6 py-4"> <button class="text-blue-600 hover:text-blue-900 mr-3 editar-btn"${addAttribute(categoria.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "actualizar", "class": "w-5 h-5" })} </button> <button class="text-red-600 hover:text-red-900 eliminar-btn"${addAttribute(categoria.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "eliminar", "class": "w-5 h-5" })} </button> </td> </tr>`) : renderTemplate`<tr> <td colspan="4" class="px-6 py-4 text-center">
No se encontraron categorías
</td> </tr>`} </tbody> </table> </div> <!-- Modal para agregar categoría --> <div id="modalAgregar" class="fixed inset-0 z-50 flex items-center justify-center backdrop-blur-sm hidden"> <div class="bg-white p-5 rounded-lg w-full max-w-md border border-gray-800"> <h3 class="text-xl font-semibold mb-6 text-black text-center">
Agregar Categoría
</h3> <form id="formAgregarCategoria"> <div class="space-y-4"> <!-- Descripción --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label> <input type="text" name="descripcion" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> </div> <!-- Botones --> <div class="flex justify-end mt-6 space-x-3"> <button type="button" id="cancelarModal" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
Cancelar
</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
Guardar
</button> </div> </form> </div> </div> <!-- Modal para editar categoría --> <div id="modalEditar" class="fixed inset-0 z-50 flex items-center justify-center backdrop-blur-sm hidden"> <div class="bg-white p-5 rounded-lg w-full max-w-md border border-gray-800"> <h3 class="text-xl font-semibold mb-6 text-black text-center">
Editar Categoría
</h3> <form id="formEditarCategoria"> <input type="hidden" name="id" id="editCategoriaId"> <div class="space-y-4"> <!-- Descripción --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label> <input type="text" name="descripcion" id="editCategoriaDescripcion" class="block w-full p-2 border border-gray-300 rounded-md text-black focus:ring-blue-500 focus:border-blue-500" required> </div> </div> <!-- Botones --> <div class="flex justify-end mt-6 space-x-3"> <button type="button" id="cancelarModalEditar" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
Cancelar
</button> <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
Actualizar
</button> </div> </form> </div> </div> ${renderScript($$result, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionCategoria.astro?astro&type=script&index=0&lang.ts")}`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionCategoria.astro", void 0);

const $$GestionArticulo = createComponent(async ($$result, $$props, $$slots) => {
  let articulos = [];
  let proveedores = [];
  let categorias = [];
  let error = null;
  try {
    const resArticulos = await fetch("http://localhost:5183/api/Articulos");
    articulos = await resArticulos.json();
    const resProveedores = await fetch("http://localhost:5183/api/Proveedores");
    proveedores = await resProveedores.json();
    const resCategorias = await fetch("http://localhost:5183/api/Categorias");
    categorias = await resCategorias.json();
  } catch (err) {
    error = err.message;
    console.error("Error fetching data:", err);
  }
  const getNombreProveedor = (id) => {
    const proveedor = proveedores.find((p) => p.id === id);
    return proveedor ? proveedor.nombre : "Desconocido";
  };
  const getDescripcionCategoria = (id) => {
    const categoria = categorias.find((c) => c.id === id);
    return categoria ? categoria.descripcion : "Sin categor\xEDa";
  };
  return renderTemplate`${maybeRenderHead()}<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full"> <!-- Encabezado con botón de agregar --> <div class="flex items-center justify-between"> <div class="flex items-center justify-between w-full pb-2"> <!-- Botones --> <div class="flex items-center space-x-2"> <button id="agregarArticulo" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300"> ${renderComponent($$result, "Icon", $$Icon, { "name": "add", "class": "w-6 h-6 mr-2 flex items-center text-[#29b73a96]" })}
Agregar
</button> </div> <!-- Input de búsqueda --> <div class="relative ml-auto"> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Buscar Cliente"> </div> </div> </div> <!-- Mensaje de error --> ${error && renderTemplate`<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
Error al cargar datos: ${error} </div>`} <!-- Tabla de artículos --> <div class="overflow-x-auto"> <table class="w-full text-sm text-left text-gray-700"> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500"> <tr> <th scope="col" class="px-6 py-3">ID</th> <th scope="col" class="px-6 py-3">Descripción</th> <th scope="col" class="px-6 py-3">Precio Alquiler</th> <th scope="col" class="px-6 py-3">Total</th> <th scope="col" class="px-6 py-3">Disponible</th> <th scope="col" class="px-6 py-3">Reparación</th> <th scope="col" class="px-6 py-3">Proveedor</th> <th scope="col" class="px-6 py-3">Categoría</th> <th scope="col" class="px-6 py-3">Acciones</th> </tr> </thead><tbody> ${articulos.length > 0 ? articulos.map((articulo) => renderTemplate`<tr class="border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400"> <td class="px-6 py-4 text-black font-semibold"> ${articulo.id} </td> <td class="px-6 py-4 font-medium text-gray-900"> ${articulo.descripcion} </td> <td class="px-6 py-4">
$${articulo.precioAlquiler.toFixed(2)} </td> <td class="px-6 py-4"> <span${addAttribute(`px-2 py-1 rounded-full text-xs ${articulo.disponible > 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}`, "class")}> ${articulo.cantidad} </span> </td> <td class="px-6 py-4"> <span${addAttribute(`px-2 py-1 rounded-full text-xs ${articulo.disponible > 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}`, "class")}> ${articulo.disponible} disponibles
</span> </td> <td class="px-6 py-4"> <span${addAttribute(`px-2 py-1 rounded-full text-xs ${articulo.reparacion >= 0 ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}`, "class")}> ${articulo.reparacion} reparación
</span> </td> <td class="px-6 py-4"> ${getNombreProveedor(articulo.proveedorId)} </td> <td class="px-6 py-4"> ${getDescripcionCategoria(articulo.categoriaId)} </td> <td class="px-6 py-4 flex space-x-2"> <button class="p-1 text-blue-600 hover:text-blue-800"${addAttribute(articulo.id, "data-id")}${addAttribute(JSON.stringify(articulo), "data-articulo")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "actualizar", "class": "w-5 h-5" })} </button> <button class="p-1 text-red-600 hover:text-red-800"${addAttribute(articulo.id, "data-id")}> ${renderComponent($$result, "Icon", $$Icon, { "name": "eliminar", "class": "w-5 h-5" })} </button> </td> </tr>`) : renderTemplate`<tr> <td colspan="7" class="px-6 py-4 text-center text-gray-500">
No se encontraron artículos
</td> </tr>`} </tbody> </table> <!-- Modal para agregar artículo --> <div id="modalAgregarArticulo" class="fixed inset-0 z-50 flex items-center justify-center backdrop-blur-sm hidden transition-opacity duration-300"> <div class="bg-white p-6 rounded-xl shadow-2xl w-full max-w-2xl border border-gray-800"> <div class="flex justify-between items-center mb-4"> <h3 class="text-2xl font-bold text-gray-800">
Agregar Nuevo Artículo
</h3> <button id="cancelarModalArticulo" class="text-gray-500 hover:text-gray-700"> ${renderComponent($$result, "Icon", $$Icon, { "name": "back", "class": "w-6 h-6" })} </button> </div> <form id="formAgregarArticulo" class="space-y-4"> <div class="grid grid-cols-1 md:grid-cols-2 gap-4"> <!-- Descripción --> <div class="col-span-2"> <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label> <input type="text" name="descripcion" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Precios --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Precio Alquiler</label> <input type="number" name="precioAlquiler" step="0.01" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Precio Proveedor</label> <input type="number" name="precioProveedor" step="0.01" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Cantidades --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Cantidad Total</label> <input type="number" name="cantidad" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">En Reparación</label> <input type="number" name="reparacion" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Selectores --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Proveedor</label> <select name="proveedorId" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> <option value="">Seleccione un proveedor</option> ${proveedores.map((proveedor) => renderTemplate`<option${addAttribute(proveedor.id, "value")}>${proveedor.nombre}</option>`)} </select> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Categoría</label> <select name="categoriaId" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> <option value="">Seleccione una categoría</option> ${categorias.map((categoria) => renderTemplate`<option${addAttribute(categoria.id, "value")}> ${categoria.descripcion} </option>`)} </select> </div> </div> <!-- Botones --> <div class="flex justify-end space-x-3 pt-4"> <!-- <button
            type="button"
            id="cancelarModalArticulo"
            class="px-5 py-2.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50"
          >
            Cancelar
          </button> --> <button type="submit" class="px-5 py-2.5 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700">
Guardar Artículo
</button> </div> </form> </div> </div> <!-- Modal para editar artículo --> <div id="modalEditarArticulo" class="fixed inset-0 z-50 flex items-center justify-center backdrop-blur-sm backdrop-blur-sm hidden transition-opacity duration-300"> <div class="bg-white p-6 rounded-xl shadow-2xl w-full max-w-2xl border border-gray-800"> <div class="flex justify-between items-center mb-4"> <h3 class="text-2xl font-bold text-gray-800">Editar Artículo</h3> <button id="cancelarModalEditar" class="text-gray-500 hover:text-gray-700"> ${renderComponent($$result, "Icon", $$Icon, { "name": "back", "class": "w-6 h-6" })} </button> </div> <form id="formEditarArticulo" class="space-y-4"> <input type="hidden" name="id" id="editarArticuloId"> <div class="grid grid-cols-1 md:grid-cols-2 gap-4"> <!-- Descripción --> <div class="col-span-2"> <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label> <input type="text" name="descripcion" id="editarDescripcion" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Precios --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Precio Alquiler</label> <input type="number" name="precioAlquiler" id="editarPrecioAlquiler" step="0.01" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Precio Proveedor</label> <input type="number" name="precioProveedor" id="editarPrecioProveedor" step="0.01" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Cantidades --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Cantidad Total</label> <input type="number" name="cantidad" id="editarCantidad" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">En Reparación</label> <input type="number" name="reparacion" id="editarReparacion" min="0" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> </div> <!-- Selectores --> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Proveedor</label> <select name="proveedorId" id="editarProveedorId" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> <option value="">Seleccione un proveedor</option> ${proveedores.map((proveedor) => renderTemplate`<option${addAttribute(proveedor.id, "value")}>${proveedor.nombre}</option>`)} </select> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Categoría</label> <select name="categoriaId" id="editarCategoriaId" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required> <option value="">Seleccione una categoría</option> ${categorias.map((categoria) => renderTemplate`<option${addAttribute(categoria.id, "value")}> ${categoria.descripcion} </option>`)} </select> </div> </div> <!-- Botones --> <div class="flex justify-end space-x-3 pt-4"> <!-- <button
            type="button"
            id="cancelarModalEditar"
            class="px-5 py-2.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50"
          >
            Cancelar
          </button> --> <button type="submit" class="px-5 py-2.5 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700">
Actualizar Artículo
</button> </div> </form> </div> </div> </div> ${renderScript($$result, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionArticulo.astro?astro&type=script&index=0&lang.ts")} </div>`;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionArticulo.astro", void 0);

const SECRET_KEY = "f8d4f7e2a6c349b7b5d1e7f9302a9c5e";
async function protectRoute(Astro) {
  const cookieHeader = Astro.request.headers.get("Cookie") || "";
  const tokenMatch = cookieHeader.match(/jwt=([^;]+)/);
  if (!tokenMatch) {
    return null;
  }
  const token = tokenMatch[1];
  try {
    const payload = jwt.verify(token, SECRET_KEY, {
      issuer: "Alquiler",
      audience: "ApiAlquiler"
    });
    return payload;
  } catch (err) {
    return null;
  }
}

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$GestionAlquiler = createComponent(async ($$result, $$props, $$slots) => {
  let alquileres = [];
  try {
    const response = await fetch("http://localhost:5183/api/Alquileres");
    if (response.ok) {
      alquileres = await response.json();
    } else {
      console.error("Error al cargar alquileres:", await response.text());
    }
  } catch (err) {
    console.error("Error al parsear alquileres:", err);
  }
  const formatDate = (dateString) => {
    if (!dateString) return "N/A";
    return new Date(dateString).toLocaleDateString("es-ES", {
      year: "numeric",
      month: "long",
      day: "numeric",
      timeZone: "UTC"
      // Añadido para consistencia si las fechas son UTC
    });
  };
  return renderTemplate(_a || (_a = __template(["", '<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full" data-astro-cid-qhz7dzok> <div class="flex items-center justify-between" data-astro-cid-qhz7dzok> <div class="flex items-center justify-between w-full pb-2" data-astro-cid-qhz7dzok> <div class="flex items-center space-x-2" data-astro-cid-qhz7dzok> <button id="btnAbrirModalAgregar" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300" data-astro-cid-qhz7dzok> ', '\nAgregar Alquiler\n</button> </div> <div class="relative ml-auto" data-astro-cid-qhz7dzok> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none" data-astro-cid-qhz7dzok> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" data-astro-cid-qhz7dzok> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" data-astro-cid-qhz7dzok></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500" placeholder="Buscar..." data-astro-cid-qhz7dzok> </div> </div> </div> ', ' </div> <div id="modalAgregarAlquiler" class="fixed inset-0 backdrop-blur-sm overflow-y-auto h-full w-full hidden flex items-center justify-center z-50" data-astro-cid-qhz7dzok> <div class="relative mx-auto p-6 w-full max-w-3xl shadow-lg rounded-md border border-gray-800 bg-white" data-astro-cid-qhz7dzok> <div class="flex justify-between items-center pb-3" data-astro-cid-qhz7dzok> <p class="text-2xl font-bold text-gray-700" data-astro-cid-qhz7dzok>Agregar Nuevo Alquiler</p> <button id="btnCerrarModal" class="modal-close cursor-pointer z-50 p-2" data-astro-cid-qhz7dzok> <svg class="fill-current text-black hover:text-gray-700" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 18 18" data-astro-cid-qhz7dzok> <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z" data-astro-cid-qhz7dzok></path> </svg> </button> </div> <form id="formAgregarAlquiler" class="space-y-4" data-astro-cid-qhz7dzok> <div class="grid grid-cols-1 md:grid-cols-2 gap-4" data-astro-cid-qhz7dzok> <div data-astro-cid-qhz7dzok> <label for="modalFechaEntrega" class="block text-sm font-medium text-gray-700" data-astro-cid-qhz7dzok>Fecha de Entrega</label> <input type="date" id="modalFechaEntrega" name="fechaEntrega" class="mt-1 block w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" required data-astro-cid-qhz7dzok> </div> <div data-astro-cid-qhz7dzok> <label for="modalFechaDevolucion" class="block text-sm font-medium text-gray-700" data-astro-cid-qhz7dzok>Fecha de Devoluci\xF3n</label> <input type="date" id="modalFechaDevolucion" name="fechaDevolucion" class="mt-1 block w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" required data-astro-cid-qhz7dzok> </div> </div> <div data-astro-cid-qhz7dzok> <label for="modalCliente" class="block text-sm font-medium text-gray-700" data-astro-cid-qhz7dzok>Cliente</label> <select id="modalCliente" name="clienteId" class="mt-1 block w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" required data-astro-cid-qhz7dzok> <option value="" data-astro-cid-qhz7dzok>Cargando clientes...</option> </select> </div> <hr class="my-6" data-astro-cid-qhz7dzok> <h3 class="text-lg font-semibold text-gray-800" data-astro-cid-qhz7dzok>Detalles de Art\xEDculos</h3> <div id="contenedorArticulosModal" class="space-y-4" data-astro-cid-qhz7dzok></div> <button type="button" id="btnAgregarOtroArticulo" class="text-indigo-600 hover:text-indigo-800 text-sm font-medium" data-astro-cid-qhz7dzok>+ Agregar otro art\xEDculo</button> <div class="mt-6 text-right" data-astro-cid-qhz7dzok> <p class="text-xl font-semibold text-gray-800" data-astro-cid-qhz7dzok>\nTotal Alquiler: <span id="modalTotalPagoDisplay" data-astro-cid-qhz7dzok>$0.00</span> </p> </div> <div class="pt-4 flex justify-end space-x-3" data-astro-cid-qhz7dzok> <button type="button" id="btnCancelarModal" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300" data-astro-cid-qhz7dzok>Cancelar</button> <button type="submit" id="btnGuardarAlquiler" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600" data-astro-cid-qhz7dzok>Guardar Alquiler</button> </div> </form> </div> </div> <script>\n  function normalize(text) {\n    return (\n      text\n        ?.toLowerCase()\n        .normalize("NFD")\n        .replace(/[\\u0300-\\u036f]/g, "") || ""\n    );\n  }\n\n  function searchTable() {\n    const inputSearch = document.getElementById("inputSearch");\n    const searchTerm = normalize(inputSearch.value);\n    const tableBody = document.getElementById("tableBody");\n    const rows = tableBody?.querySelectorAll("tr") || [];\n\n    rows.forEach((row) => {\n      const cliente = normalize(row.children[1]?.textContent);\n      const telefono = normalize(row.children[2]?.textContent);\n      const direccion = normalize(row.children[3]?.textContent);\n      const fechaEntrega = normalize(row.children[4]?.textContent);\n      const fechaDevolucion = normalize(row.children[5]?.textContent);\n      const total = normalize(row.children[6]?.textContent);\n      const idAlquiler = normalize(row.children[0]?.textContent);\n\n      const matches =\n        idAlquiler.includes(searchTerm) ||\n        cliente.includes(searchTerm) ||\n        telefono.includes(searchTerm) ||\n        direccion.includes(searchTerm) ||\n        fechaEntrega.includes(searchTerm) ||\n        fechaDevolucion.includes(searchTerm) ||\n        total.includes(searchTerm);\n\n      row.style.display = matches ? "" : "none";\n    });\n  }\n\n  function getUserIdFromCookie() {\n    const cookies = document.cookie.split(";");\n    for (let cookie of cookies) {\n      const [name, value] = cookie.split("=").map((c) => c.trim());\n      if (name === "jwt") {\n        try {\n          const payloadBase64 = value.split(".")[1];\n          if (!payloadBase64) return 1;\n          const payload = JSON.parse(atob(payloadBase64));\n          return payload.userId || payload.id || 1;\n        } catch (e) {\n          console.error("Error al decodificar JWT o extraer userId:", e);\n          return 1;\n        }\n      }\n    }\n    console.warn(\n      "Cookie \'jwt\' no encontrada. Usando ID de usuario fallback: 1"\n    );\n    return 1;\n  }\n\n  const API_BASE_URL = "http://localhost:5183/api";\n  let allArticulosData = [];\n  let allCategoriasData = [];\n\n  document.addEventListener("DOMContentLoaded", () => {\n    const modal = document.getElementById("modalAgregarAlquiler");\n    const btnAbrirModal = document.getElementById("btnAbrirModalAgregar");\n    const btnCerrarModal = document.getElementById("btnCerrarModal");\n    const btnCancelarModal = document.getElementById("btnCancelarModal");\n    const formAgregarAlquiler = document.getElementById("formAgregarAlquiler");\n    const inputSearch = document.getElementById("inputSearch");\n    const btnAgregarOtroArticulo = document.getElementById(\n      "btnAgregarOtroArticulo"\n    );\n    const contenedorArticulosModal = document.getElementById(\n      "contenedorArticulosModal"\n    );\n    const modalTotalPagoDisplay = document.getElementById(\n      "modalTotalPagoDisplay"\n    );\n\n    if (inputSearch) {\n      inputSearch.addEventListener("input", searchTable);\n    }\n\n    // Abrir Modal\n    if (btnAbrirModal) {\n      btnAbrirModal.addEventListener("click", async () => {\n        modal.classList.remove("hidden");\n        document.body.classList.add("overflow-hidden");\n        await loadModalInitialData();\n        resetAndAddFirstArticuloRow();\n      });\n    }\n\n    // Cerrar Modal\n    function closeModal() {\n      modal.classList.add("hidden");\n      document.body.classList.remove("overflow-hidden");\n      formAgregarAlquiler.reset();\n      contenedorArticulosModal.innerHTML = "";\n      modalTotalPagoDisplay.textContent = "$0.00";\n      document.getElementById("modalCliente").innerHTML =\n        \'<option value="">Cargando clientes...</option>\';\n    }\n    if (btnCerrarModal) btnCerrarModal.addEventListener("click", closeModal);\n    if (btnCancelarModal)\n      btnCancelarModal.addEventListener("click", closeModal);\n\n    async function loadModalInitialData() {\n      const clienteSelect = document.getElementById("modalCliente");\n\n      try {\n        const resClientes = await fetch(`${API_BASE_URL}/Clientes`);\n        if (!resClientes.ok) throw new Error("Error al cargar clientes");\n        const clientes = await resClientes.json();\n        clienteSelect.innerHTML =\n          \'<option value="">Seleccione un cliente</option>\';\n        clientes.forEach((cli) => {\n          clienteSelect.innerHTML += `<option value="${cli.id}">${cli.nombre}</option>`;\n        });\n      } catch (error) {\n        console.error(error);\n        clienteSelect.innerHTML =\n          \'<option value="">Error al cargar clientes</option>\';\n      }\n\n      if (allCategoriasData.length === 0) {\n        try {\n          const resCategorias = await fetch(`${API_BASE_URL}/Categorias`);\n          if (!resCategorias.ok) throw new Error("Error al cargar categor\xEDas");\n          allCategoriasData = await resCategorias.json();\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      if (allArticulosData.length === 0) {\n        try {\n          const resArticulos = await fetch(`${API_BASE_URL}/Articulos`);\n          if (!resArticulos.ok) throw new Error("Error al cargar art\xEDculos");\n          allArticulosData = await resArticulos.json();\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n\n    let articuloRowIndex = 0;\n    function addArticuloRow() {\n      articuloRowIndex++;\n      const div = document.createElement("div");\n      div.className = "articulo-row p-3 border rounded-md space-y-2 bg-gray-50";\n      div.dataset.rowIndex = articuloRowIndex;\n\n      div.innerHTML = `\n            <div class="grid grid-cols-1 md:grid-cols-4 gap-3 items-end">\n                <div>\n                    <label for="modalCategoria-${articuloRowIndex}" class="block text-xs font-medium text-gray-600">Categor\xEDa</label>\n                    <select id="modalCategoria-${articuloRowIndex}" name="categoria" class="modal-categoria-select mt-1 block w-full p-2 text-sm border-gray-300 rounded-md shadow-sm" required>\n                        <option value="">Seleccione...</option>\n                        ${allCategoriasData.map((cat) => `<option value="${cat.id}">${cat.descripcion}</option>`).join("")}\n                    </select>\n                </div>\n                <div>\n                    <label for="modalArticulo-${articuloRowIndex}" class="block text-xs font-medium text-gray-600">Art\xEDculo (Disponibles)</label>\n                    <select id="modalArticulo-${articuloRowIndex}" name="articuloId" class="modal-articulo-select mt-1 block w-full p-2 text-sm border-gray-300 rounded-md shadow-sm" required disabled>\n                        <option value="">Seleccione categor\xEDa primero...</option>\n                    </select>\n                </div>\n                <div>\n                    <label for="modalCantidad-${articuloRowIndex}" class="block text-xs font-medium text-gray-600">Cantidad</label>\n                    <input type="number" id="modalCantidad-${articuloRowIndex}" name="cantidad" min="1" class="modal-cantidad-input mt-1 block w-full p-2 text-sm border-gray-300 rounded-md shadow-sm" required disabled placeholder="0" />\n                </div>\n                <button type="button" class="btnEliminarArticuloRow bg-red-500 text-white px-2 py-1 text-xs rounded hover:bg-red-600 self-center h-9">Eliminar</button>\n            </div>\n            <p class="text-xs text-gray-500">Costo Alquiler Art\xEDculo: <span id="costoArticuloDisplay-${articuloRowIndex}">$0.00</span> | Subtotal: <span id="subtotalArticuloDisplay-${articuloRowIndex}">$0.00</span></p>\n        `;\n      contenedorArticulosModal.appendChild(div);\n      attachArticuloRowListeners(div);\n    }\n\n    function resetAndAddFirstArticuloRow() {\n      contenedorArticulosModal.innerHTML = "";\n      articuloRowIndex = 0;\n      addArticuloRow();\n    }\n\n    function attachArticuloRowListeners(rowElement) {\n      const categoriaSelect = rowElement.querySelector(\n        ".modal-categoria-select"\n      );\n      const articuloSelect = rowElement.querySelector(".modal-articulo-select");\n      const cantidadInput = rowElement.querySelector(".modal-cantidad-input");\n      const btnEliminar = rowElement.querySelector(".btnEliminarArticuloRow");\n      const rowIndex = rowElement.dataset.rowIndex;\n      const costoArticuloDisplay = document.getElementById(\n        `costoArticuloDisplay-${rowIndex}`\n      );\n      const subtotalArticuloDisplay = document.getElementById(\n        `subtotalArticuloDisplay-${rowIndex}`\n      );\n\n      categoriaSelect.addEventListener("change", function () {\n        const categoriaId = parseInt(this.value);\n        articuloSelect.innerHTML =\n          \'<option value="">Cargando art\xEDculos...</option>\';\n        articuloSelect.disabled = true;\n        cantidadInput.disabled = true;\n        cantidadInput.value = "";\n        cantidadInput.max = "";\n        costoArticuloDisplay.textContent = "$0.00";\n        subtotalArticuloDisplay.textContent = "$0.00";\n\n        if (!categoriaId) {\n          articuloSelect.innerHTML =\n            \'<option value="">Seleccione categor\xEDa primero...</option>\';\n          updateTotalAlquiler();\n          return;\n        }\n\n        const articulosFiltrados = allArticulosData.filter(\n          (art) => art.categoriaId === categoriaId\n        );\n        if (articulosFiltrados.length > 0) {\n          articuloSelect.innerHTML =\n            \'<option value="">Seleccione un art\xEDculo...</option>\';\n          articulosFiltrados.forEach((art) => {\n            articuloSelect.innerHTML += `<option value="${art.id}" data-precio="${art.precioAlquiler}" data-disponible="${art.disponible}" data-nombre="${art.descripcion}">${art.descripcion} (Disp: ${art.disponible})</option>`;\n          });\n          articuloSelect.disabled = false;\n        } else {\n          articuloSelect.innerHTML =\n            \'<option value="">No hay art\xEDculos</option>\';\n        }\n        updateTotalAlquiler();\n      });\n\n      articuloSelect.addEventListener("change", function () {\n        const selectedOption = this.options[this.selectedIndex];\n        cantidadInput.value = "";\n        subtotalArticuloDisplay.textContent = "$0.00";\n\n        if (this.value && selectedOption.dataset.precio) {\n          cantidadInput.disabled = false;\n          cantidadInput.max = selectedOption.dataset.disponible;\n          costoArticuloDisplay.textContent = `$${parseFloat(selectedOption.dataset.precio).toFixed(2)}`;\n\n          cantidadInput.dataset.disponible = selectedOption.dataset.disponible;\n        } else {\n          cantidadInput.disabled = true;\n          costoArticuloDisplay.textContent = "$0.00";\n          delete cantidadInput.dataset.disponible;\n        }\n\n        updateTotalAlquiler();\n      });\n\n      cantidadInput.addEventListener("input", function () {\n        const cantidad = parseInt(this.value) || 0;\n        const maxDisponible = parseInt(this.max) || 0;\n        const selectedArticuloOption =\n          articuloSelect.options[articuloSelect.selectedIndex];\n        const precioUnitario =\n          selectedArticuloOption && selectedArticuloOption.dataset.precio\n            ? parseFloat(selectedArticuloOption.dataset.precio)\n            : 0;\n\n        if (cantidad > maxDisponible) {\n          this.value = maxDisponible;\n          console.warn(`Cantidad excede disponible (${maxDisponible})`);\n        }\n        const cantidadValida = Math.min(cantidad, maxDisponible);\n        subtotalArticuloDisplay.textContent = `$${(cantidadValida * precioUnitario).toFixed(2)}`;\n        updateTotalAlquiler();\n      });\n\n      btnEliminar.addEventListener("click", function () {\n        rowElement.remove();\n        updateTotalAlquiler();\n      });\n    }\n\n    if (btnAgregarOtroArticulo) {\n      btnAgregarOtroArticulo.addEventListener("click", addArticuloRow);\n    }\n\n    function updateTotalAlquiler() {\n      let totalGeneral = 0;\n      const articuloRows =\n        contenedorArticulosModal.querySelectorAll(".articulo-row");\n      articuloRows.forEach((row) => {\n        const cantidadInput = row.querySelector(".modal-cantidad-input");\n        const articuloSelect = row.querySelector(".modal-articulo-select");\n        const selectedArticuloOption =\n          articuloSelect.options[articuloSelect.selectedIndex];\n\n        if (\n          cantidadInput &&\n          selectedArticuloOption &&\n          selectedArticuloOption.value\n        ) {\n          const cantidad = parseInt(cantidadInput.value) || 0;\n          const precio = parseFloat(selectedArticuloOption.dataset.precio) || 0;\n          totalGeneral += cantidad * precio;\n        }\n      });\n      modalTotalPagoDisplay.textContent = `$${totalGeneral.toFixed(2)}`;\n    }\n\n    if (formAgregarAlquiler) {\n      formAgregarAlquiler.addEventListener("submit", async function (event) {\n        event.preventDefault();\n        const btnGuardar = document.getElementById("btnGuardarAlquiler");\n        btnGuardar.disabled = true;\n        btnGuardar.textContent = "Guardando...";\n\n        const formData = new FormData(this);\n        const clienteId = parseInt(formData.get("clienteId"));\n        const fechaEntrega = formData.get("fechaEntrega");\n        const fechaDevolucion = formData.get("fechaDevolucion");\n\n        if (new Date(fechaDevolucion) < new Date(fechaEntrega)) {\n          alert(\n            "La fecha de devoluci\xF3n no puede ser anterior a la fecha de entrega."\n          );\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n          return;\n        }\n\n        // Recolectar detalles de art\xEDculos\n        const detallesArticulos = [];\n        const articuloRows =\n          contenedorArticulosModal.querySelectorAll(".articulo-row");\n        let hayArticulosInvalidos = false;\n\n        articuloRows.forEach((row) => {\n          const articuloSelect = row.querySelector(".modal-articulo-select");\n          const cantidadInput = row.querySelector(".modal-cantidad-input");\n          const articuloId = parseInt(articuloSelect.value);\n          const cantidad = parseInt(cantidadInput.value);\n          const selectedOption =\n            articuloSelect.options[articuloSelect.selectedIndex];\n          const disponible = selectedOption\n            ? parseInt(selectedOption.dataset.disponible)\n            : 0;\n\n          if (articuloId && cantidad > 0) {\n            if (cantidad > disponible) {\n              alert(\n                `Cantidad para "${selectedOption.dataset.nombre}" (${cantidad}) excede lo disponible (${disponible}).`\n              );\n              hayArticulosInvalidos = true;\n              return;\n            }\n\n            detallesArticulos.push({\n              articuloId,\n              cantidad,\n              disponible,\n              cantidadARestar: disponible - cantidad,\n            });\n          }\n        });\n\n        if (hayArticulosInvalidos) {\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n          return;\n        }\n\n        if (detallesArticulos.length === 0) {\n          alert("Debe agregar al menos un art\xEDculo al alquiler.");\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n          return;\n        }\n\n        const totalPago = parseFloat(\n          modalTotalPagoDisplay.textContent.replace("$", "")\n        );\n        const usuarioId = getUserIdFromCookie();\n\n        let nuevoAlquilerId = 1;\n        try {\n          const resAlquileres = await fetch(`${API_BASE_URL}/Alquileres`);\n          if (resAlquileres.ok) {\n            const alquileresActuales = await resAlquileres.json();\n            if (alquileresActuales.length > 0) {\n              const maxId = Math.max(\n                ...alquileresActuales\n                  .map((a) => Number(a.id))\n                  .filter((id) => !isNaN(id))\n              );\n              if (isFinite(maxId)) {\n                nuevoAlquilerId = maxId + 1;\n              } else {\n                console.warn(\n                  "No se pudo determinar el \xFAltimo ID de alquiler, se usar\xE1 1 o el ID generado por el backend."\n                );\n              }\n            }\n          } else {\n            console.warn(\n              "No se pudieron obtener los alquileres para determinar el nuevo ID. El backend deber\xEDa generar el ID."\n            );\n          }\n        } catch (error) {\n          console.error("Error obteniendo alquileres para ID:", error);\n        }\n\n        const datosAlquiler = {\n          id: 0,\n          FechaEntrega: new Date(fechaEntrega + "T00:00:00").toISOString(),\n          FechaDevolucion: new Date(\n            fechaDevolucion + "T00:00:00"\n          ).toISOString(),\n          TotalPago: totalPago,\n          Estado: "Pendiente",\n          ClienteId: clienteId,\n          UsuarioId: usuarioId,\n          Articulos: detallesArticulos.map((detalle) => ({\n            ArticuloId: detalle.articuloId,\n            Cantidad: detalle.cantidad,\n            CantidadARestar: detalle.disponible - detalle.cantidad,\n          })),\n        };\n\n        console.log("Nuevo ID de alquiler:", datosAlquiler);\n\n        try {\n          const resNuevoAlquiler = await fetch(`${API_BASE_URL}/AlquilerAdd`, {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(datosAlquiler),\n          });\n\n          if (!resNuevoAlquiler.ok) {\n            const errorData = await resNuevoAlquiler.text();\n            throw new Error(\n              `Error al guardar alquiler: ${resNuevoAlquiler.status} - ${errorData}`\n            );\n          }\n          const alquilerGuardado = await resNuevoAlquiler.json();\n          const alquilerIdReal = alquilerGuardado.id;\n\n          for (const detalle of detallesArticulos) {\n            const datosDetalle = {\n              articuloId: detalle.articuloId,\n              cantidad: detalle.cantidad,\n              alquilerId: alquilerIdReal,\n            };\n            const resDetalle = await fetch(`${API_BASE_URL}/DetalleAlquiler`, {\n              method: "POST",\n              headers: { "Content-Type": "application/json" },\n              body: JSON.stringify(datosDetalle),\n            });\n            if (!resDetalle.ok) {\n              const errorDetalle = await resDetalle.text();\n              console.error(\n                `Error al guardar detalle para art\xEDculo ${detalle.articuloId}: ${errorDetalle}`\n              );\n            }\n          }\n\n          alert("Alquiler agregado exitosamente!");\n          closeModal();\n          location.reload();\n        } catch (error) {\n          console.error("Error en el proceso de guardado:", error);\n          alert(`Ocurri\xF3 un error: ${error.message}`);\n        } finally {\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n        }\n      });\n    }\n  });\n<\/script> '], ["", '<div class="shadow-md sm:rounded-lg bg-[#e9eef6] p-4 pb-2 w-full h-full" data-astro-cid-qhz7dzok> <div class="flex items-center justify-between" data-astro-cid-qhz7dzok> <div class="flex items-center justify-between w-full pb-2" data-astro-cid-qhz7dzok> <div class="flex items-center space-x-2" data-astro-cid-qhz7dzok> <button id="btnAbrirModalAgregar" class="flex items-center text-black hover:bg-green-300 p-1 rounded-md border border-gray-300" data-astro-cid-qhz7dzok> ', '\nAgregar Alquiler\n</button> </div> <div class="relative ml-auto" data-astro-cid-qhz7dzok> <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none" data-astro-cid-qhz7dzok> <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" data-astro-cid-qhz7dzok> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" data-astro-cid-qhz7dzok></path> </svg> </div> <input type="text" id="inputSearch" class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-[#e9eef6] focus:ring-blue-500 focus:border-blue-500" placeholder="Buscar..." data-astro-cid-qhz7dzok> </div> </div> </div> ', ' </div> <div id="modalAgregarAlquiler" class="fixed inset-0 backdrop-blur-sm overflow-y-auto h-full w-full hidden flex items-center justify-center z-50" data-astro-cid-qhz7dzok> <div class="relative mx-auto p-6 w-full max-w-3xl shadow-lg rounded-md border border-gray-800 bg-white" data-astro-cid-qhz7dzok> <div class="flex justify-between items-center pb-3" data-astro-cid-qhz7dzok> <p class="text-2xl font-bold text-gray-700" data-astro-cid-qhz7dzok>Agregar Nuevo Alquiler</p> <button id="btnCerrarModal" class="modal-close cursor-pointer z-50 p-2" data-astro-cid-qhz7dzok> <svg class="fill-current text-black hover:text-gray-700" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 18 18" data-astro-cid-qhz7dzok> <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z" data-astro-cid-qhz7dzok></path> </svg> </button> </div> <form id="formAgregarAlquiler" class="space-y-4" data-astro-cid-qhz7dzok> <div class="grid grid-cols-1 md:grid-cols-2 gap-4" data-astro-cid-qhz7dzok> <div data-astro-cid-qhz7dzok> <label for="modalFechaEntrega" class="block text-sm font-medium text-gray-700" data-astro-cid-qhz7dzok>Fecha de Entrega</label> <input type="date" id="modalFechaEntrega" name="fechaEntrega" class="mt-1 block w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" required data-astro-cid-qhz7dzok> </div> <div data-astro-cid-qhz7dzok> <label for="modalFechaDevolucion" class="block text-sm font-medium text-gray-700" data-astro-cid-qhz7dzok>Fecha de Devoluci\xF3n</label> <input type="date" id="modalFechaDevolucion" name="fechaDevolucion" class="mt-1 block w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" required data-astro-cid-qhz7dzok> </div> </div> <div data-astro-cid-qhz7dzok> <label for="modalCliente" class="block text-sm font-medium text-gray-700" data-astro-cid-qhz7dzok>Cliente</label> <select id="modalCliente" name="clienteId" class="mt-1 block w-full p-2 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" required data-astro-cid-qhz7dzok> <option value="" data-astro-cid-qhz7dzok>Cargando clientes...</option> </select> </div> <hr class="my-6" data-astro-cid-qhz7dzok> <h3 class="text-lg font-semibold text-gray-800" data-astro-cid-qhz7dzok>Detalles de Art\xEDculos</h3> <div id="contenedorArticulosModal" class="space-y-4" data-astro-cid-qhz7dzok></div> <button type="button" id="btnAgregarOtroArticulo" class="text-indigo-600 hover:text-indigo-800 text-sm font-medium" data-astro-cid-qhz7dzok>+ Agregar otro art\xEDculo</button> <div class="mt-6 text-right" data-astro-cid-qhz7dzok> <p class="text-xl font-semibold text-gray-800" data-astro-cid-qhz7dzok>\nTotal Alquiler: <span id="modalTotalPagoDisplay" data-astro-cid-qhz7dzok>$0.00</span> </p> </div> <div class="pt-4 flex justify-end space-x-3" data-astro-cid-qhz7dzok> <button type="button" id="btnCancelarModal" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300" data-astro-cid-qhz7dzok>Cancelar</button> <button type="submit" id="btnGuardarAlquiler" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600" data-astro-cid-qhz7dzok>Guardar Alquiler</button> </div> </form> </div> </div> <script>\n  function normalize(text) {\n    return (\n      text\n        ?.toLowerCase()\n        .normalize("NFD")\n        .replace(/[\\\\u0300-\\\\u036f]/g, "") || ""\n    );\n  }\n\n  function searchTable() {\n    const inputSearch = document.getElementById("inputSearch");\n    const searchTerm = normalize(inputSearch.value);\n    const tableBody = document.getElementById("tableBody");\n    const rows = tableBody?.querySelectorAll("tr") || [];\n\n    rows.forEach((row) => {\n      const cliente = normalize(row.children[1]?.textContent);\n      const telefono = normalize(row.children[2]?.textContent);\n      const direccion = normalize(row.children[3]?.textContent);\n      const fechaEntrega = normalize(row.children[4]?.textContent);\n      const fechaDevolucion = normalize(row.children[5]?.textContent);\n      const total = normalize(row.children[6]?.textContent);\n      const idAlquiler = normalize(row.children[0]?.textContent);\n\n      const matches =\n        idAlquiler.includes(searchTerm) ||\n        cliente.includes(searchTerm) ||\n        telefono.includes(searchTerm) ||\n        direccion.includes(searchTerm) ||\n        fechaEntrega.includes(searchTerm) ||\n        fechaDevolucion.includes(searchTerm) ||\n        total.includes(searchTerm);\n\n      row.style.display = matches ? "" : "none";\n    });\n  }\n\n  function getUserIdFromCookie() {\n    const cookies = document.cookie.split(";");\n    for (let cookie of cookies) {\n      const [name, value] = cookie.split("=").map((c) => c.trim());\n      if (name === "jwt") {\n        try {\n          const payloadBase64 = value.split(".")[1];\n          if (!payloadBase64) return 1;\n          const payload = JSON.parse(atob(payloadBase64));\n          return payload.userId || payload.id || 1;\n        } catch (e) {\n          console.error("Error al decodificar JWT o extraer userId:", e);\n          return 1;\n        }\n      }\n    }\n    console.warn(\n      "Cookie \'jwt\' no encontrada. Usando ID de usuario fallback: 1"\n    );\n    return 1;\n  }\n\n  const API_BASE_URL = "http://localhost:5183/api";\n  let allArticulosData = [];\n  let allCategoriasData = [];\n\n  document.addEventListener("DOMContentLoaded", () => {\n    const modal = document.getElementById("modalAgregarAlquiler");\n    const btnAbrirModal = document.getElementById("btnAbrirModalAgregar");\n    const btnCerrarModal = document.getElementById("btnCerrarModal");\n    const btnCancelarModal = document.getElementById("btnCancelarModal");\n    const formAgregarAlquiler = document.getElementById("formAgregarAlquiler");\n    const inputSearch = document.getElementById("inputSearch");\n    const btnAgregarOtroArticulo = document.getElementById(\n      "btnAgregarOtroArticulo"\n    );\n    const contenedorArticulosModal = document.getElementById(\n      "contenedorArticulosModal"\n    );\n    const modalTotalPagoDisplay = document.getElementById(\n      "modalTotalPagoDisplay"\n    );\n\n    if (inputSearch) {\n      inputSearch.addEventListener("input", searchTable);\n    }\n\n    // Abrir Modal\n    if (btnAbrirModal) {\n      btnAbrirModal.addEventListener("click", async () => {\n        modal.classList.remove("hidden");\n        document.body.classList.add("overflow-hidden");\n        await loadModalInitialData();\n        resetAndAddFirstArticuloRow();\n      });\n    }\n\n    // Cerrar Modal\n    function closeModal() {\n      modal.classList.add("hidden");\n      document.body.classList.remove("overflow-hidden");\n      formAgregarAlquiler.reset();\n      contenedorArticulosModal.innerHTML = "";\n      modalTotalPagoDisplay.textContent = "$0.00";\n      document.getElementById("modalCliente").innerHTML =\n        \'<option value="">Cargando clientes...</option>\';\n    }\n    if (btnCerrarModal) btnCerrarModal.addEventListener("click", closeModal);\n    if (btnCancelarModal)\n      btnCancelarModal.addEventListener("click", closeModal);\n\n    async function loadModalInitialData() {\n      const clienteSelect = document.getElementById("modalCliente");\n\n      try {\n        const resClientes = await fetch(\\`\\${API_BASE_URL}/Clientes\\`);\n        if (!resClientes.ok) throw new Error("Error al cargar clientes");\n        const clientes = await resClientes.json();\n        clienteSelect.innerHTML =\n          \'<option value="">Seleccione un cliente</option>\';\n        clientes.forEach((cli) => {\n          clienteSelect.innerHTML += \\`<option value="\\${cli.id}">\\${cli.nombre}</option>\\`;\n        });\n      } catch (error) {\n        console.error(error);\n        clienteSelect.innerHTML =\n          \'<option value="">Error al cargar clientes</option>\';\n      }\n\n      if (allCategoriasData.length === 0) {\n        try {\n          const resCategorias = await fetch(\\`\\${API_BASE_URL}/Categorias\\`);\n          if (!resCategorias.ok) throw new Error("Error al cargar categor\xEDas");\n          allCategoriasData = await resCategorias.json();\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      if (allArticulosData.length === 0) {\n        try {\n          const resArticulos = await fetch(\\`\\${API_BASE_URL}/Articulos\\`);\n          if (!resArticulos.ok) throw new Error("Error al cargar art\xEDculos");\n          allArticulosData = await resArticulos.json();\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n\n    let articuloRowIndex = 0;\n    function addArticuloRow() {\n      articuloRowIndex++;\n      const div = document.createElement("div");\n      div.className = "articulo-row p-3 border rounded-md space-y-2 bg-gray-50";\n      div.dataset.rowIndex = articuloRowIndex;\n\n      div.innerHTML = \\`\n            <div class="grid grid-cols-1 md:grid-cols-4 gap-3 items-end">\n                <div>\n                    <label for="modalCategoria-\\${articuloRowIndex}" class="block text-xs font-medium text-gray-600">Categor\xEDa</label>\n                    <select id="modalCategoria-\\${articuloRowIndex}" name="categoria" class="modal-categoria-select mt-1 block w-full p-2 text-sm border-gray-300 rounded-md shadow-sm" required>\n                        <option value="">Seleccione...</option>\n                        \\${allCategoriasData.map((cat) => \\`<option value="\\${cat.id}">\\${cat.descripcion}</option>\\`).join("")}\n                    </select>\n                </div>\n                <div>\n                    <label for="modalArticulo-\\${articuloRowIndex}" class="block text-xs font-medium text-gray-600">Art\xEDculo (Disponibles)</label>\n                    <select id="modalArticulo-\\${articuloRowIndex}" name="articuloId" class="modal-articulo-select mt-1 block w-full p-2 text-sm border-gray-300 rounded-md shadow-sm" required disabled>\n                        <option value="">Seleccione categor\xEDa primero...</option>\n                    </select>\n                </div>\n                <div>\n                    <label for="modalCantidad-\\${articuloRowIndex}" class="block text-xs font-medium text-gray-600">Cantidad</label>\n                    <input type="number" id="modalCantidad-\\${articuloRowIndex}" name="cantidad" min="1" class="modal-cantidad-input mt-1 block w-full p-2 text-sm border-gray-300 rounded-md shadow-sm" required disabled placeholder="0" />\n                </div>\n                <button type="button" class="btnEliminarArticuloRow bg-red-500 text-white px-2 py-1 text-xs rounded hover:bg-red-600 self-center h-9">Eliminar</button>\n            </div>\n            <p class="text-xs text-gray-500">Costo Alquiler Art\xEDculo: <span id="costoArticuloDisplay-\\${articuloRowIndex}">$0.00</span> | Subtotal: <span id="subtotalArticuloDisplay-\\${articuloRowIndex}">$0.00</span></p>\n        \\`;\n      contenedorArticulosModal.appendChild(div);\n      attachArticuloRowListeners(div);\n    }\n\n    function resetAndAddFirstArticuloRow() {\n      contenedorArticulosModal.innerHTML = "";\n      articuloRowIndex = 0;\n      addArticuloRow();\n    }\n\n    function attachArticuloRowListeners(rowElement) {\n      const categoriaSelect = rowElement.querySelector(\n        ".modal-categoria-select"\n      );\n      const articuloSelect = rowElement.querySelector(".modal-articulo-select");\n      const cantidadInput = rowElement.querySelector(".modal-cantidad-input");\n      const btnEliminar = rowElement.querySelector(".btnEliminarArticuloRow");\n      const rowIndex = rowElement.dataset.rowIndex;\n      const costoArticuloDisplay = document.getElementById(\n        \\`costoArticuloDisplay-\\${rowIndex}\\`\n      );\n      const subtotalArticuloDisplay = document.getElementById(\n        \\`subtotalArticuloDisplay-\\${rowIndex}\\`\n      );\n\n      categoriaSelect.addEventListener("change", function () {\n        const categoriaId = parseInt(this.value);\n        articuloSelect.innerHTML =\n          \'<option value="">Cargando art\xEDculos...</option>\';\n        articuloSelect.disabled = true;\n        cantidadInput.disabled = true;\n        cantidadInput.value = "";\n        cantidadInput.max = "";\n        costoArticuloDisplay.textContent = "$0.00";\n        subtotalArticuloDisplay.textContent = "$0.00";\n\n        if (!categoriaId) {\n          articuloSelect.innerHTML =\n            \'<option value="">Seleccione categor\xEDa primero...</option>\';\n          updateTotalAlquiler();\n          return;\n        }\n\n        const articulosFiltrados = allArticulosData.filter(\n          (art) => art.categoriaId === categoriaId\n        );\n        if (articulosFiltrados.length > 0) {\n          articuloSelect.innerHTML =\n            \'<option value="">Seleccione un art\xEDculo...</option>\';\n          articulosFiltrados.forEach((art) => {\n            articuloSelect.innerHTML += \\`<option value="\\${art.id}" data-precio="\\${art.precioAlquiler}" data-disponible="\\${art.disponible}" data-nombre="\\${art.descripcion}">\\${art.descripcion} (Disp: \\${art.disponible})</option>\\`;\n          });\n          articuloSelect.disabled = false;\n        } else {\n          articuloSelect.innerHTML =\n            \'<option value="">No hay art\xEDculos</option>\';\n        }\n        updateTotalAlquiler();\n      });\n\n      articuloSelect.addEventListener("change", function () {\n        const selectedOption = this.options[this.selectedIndex];\n        cantidadInput.value = "";\n        subtotalArticuloDisplay.textContent = "$0.00";\n\n        if (this.value && selectedOption.dataset.precio) {\n          cantidadInput.disabled = false;\n          cantidadInput.max = selectedOption.dataset.disponible;\n          costoArticuloDisplay.textContent = \\`$\\${parseFloat(selectedOption.dataset.precio).toFixed(2)}\\`;\n\n          cantidadInput.dataset.disponible = selectedOption.dataset.disponible;\n        } else {\n          cantidadInput.disabled = true;\n          costoArticuloDisplay.textContent = "$0.00";\n          delete cantidadInput.dataset.disponible;\n        }\n\n        updateTotalAlquiler();\n      });\n\n      cantidadInput.addEventListener("input", function () {\n        const cantidad = parseInt(this.value) || 0;\n        const maxDisponible = parseInt(this.max) || 0;\n        const selectedArticuloOption =\n          articuloSelect.options[articuloSelect.selectedIndex];\n        const precioUnitario =\n          selectedArticuloOption && selectedArticuloOption.dataset.precio\n            ? parseFloat(selectedArticuloOption.dataset.precio)\n            : 0;\n\n        if (cantidad > maxDisponible) {\n          this.value = maxDisponible;\n          console.warn(\\`Cantidad excede disponible (\\${maxDisponible})\\`);\n        }\n        const cantidadValida = Math.min(cantidad, maxDisponible);\n        subtotalArticuloDisplay.textContent = \\`$\\${(cantidadValida * precioUnitario).toFixed(2)}\\`;\n        updateTotalAlquiler();\n      });\n\n      btnEliminar.addEventListener("click", function () {\n        rowElement.remove();\n        updateTotalAlquiler();\n      });\n    }\n\n    if (btnAgregarOtroArticulo) {\n      btnAgregarOtroArticulo.addEventListener("click", addArticuloRow);\n    }\n\n    function updateTotalAlquiler() {\n      let totalGeneral = 0;\n      const articuloRows =\n        contenedorArticulosModal.querySelectorAll(".articulo-row");\n      articuloRows.forEach((row) => {\n        const cantidadInput = row.querySelector(".modal-cantidad-input");\n        const articuloSelect = row.querySelector(".modal-articulo-select");\n        const selectedArticuloOption =\n          articuloSelect.options[articuloSelect.selectedIndex];\n\n        if (\n          cantidadInput &&\n          selectedArticuloOption &&\n          selectedArticuloOption.value\n        ) {\n          const cantidad = parseInt(cantidadInput.value) || 0;\n          const precio = parseFloat(selectedArticuloOption.dataset.precio) || 0;\n          totalGeneral += cantidad * precio;\n        }\n      });\n      modalTotalPagoDisplay.textContent = \\`$\\${totalGeneral.toFixed(2)}\\`;\n    }\n\n    if (formAgregarAlquiler) {\n      formAgregarAlquiler.addEventListener("submit", async function (event) {\n        event.preventDefault();\n        const btnGuardar = document.getElementById("btnGuardarAlquiler");\n        btnGuardar.disabled = true;\n        btnGuardar.textContent = "Guardando...";\n\n        const formData = new FormData(this);\n        const clienteId = parseInt(formData.get("clienteId"));\n        const fechaEntrega = formData.get("fechaEntrega");\n        const fechaDevolucion = formData.get("fechaDevolucion");\n\n        if (new Date(fechaDevolucion) < new Date(fechaEntrega)) {\n          alert(\n            "La fecha de devoluci\xF3n no puede ser anterior a la fecha de entrega."\n          );\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n          return;\n        }\n\n        // Recolectar detalles de art\xEDculos\n        const detallesArticulos = [];\n        const articuloRows =\n          contenedorArticulosModal.querySelectorAll(".articulo-row");\n        let hayArticulosInvalidos = false;\n\n        articuloRows.forEach((row) => {\n          const articuloSelect = row.querySelector(".modal-articulo-select");\n          const cantidadInput = row.querySelector(".modal-cantidad-input");\n          const articuloId = parseInt(articuloSelect.value);\n          const cantidad = parseInt(cantidadInput.value);\n          const selectedOption =\n            articuloSelect.options[articuloSelect.selectedIndex];\n          const disponible = selectedOption\n            ? parseInt(selectedOption.dataset.disponible)\n            : 0;\n\n          if (articuloId && cantidad > 0) {\n            if (cantidad > disponible) {\n              alert(\n                \\`Cantidad para "\\${selectedOption.dataset.nombre}" (\\${cantidad}) excede lo disponible (\\${disponible}).\\`\n              );\n              hayArticulosInvalidos = true;\n              return;\n            }\n\n            detallesArticulos.push({\n              articuloId,\n              cantidad,\n              disponible,\n              cantidadARestar: disponible - cantidad,\n            });\n          }\n        });\n\n        if (hayArticulosInvalidos) {\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n          return;\n        }\n\n        if (detallesArticulos.length === 0) {\n          alert("Debe agregar al menos un art\xEDculo al alquiler.");\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n          return;\n        }\n\n        const totalPago = parseFloat(\n          modalTotalPagoDisplay.textContent.replace("$", "")\n        );\n        const usuarioId = getUserIdFromCookie();\n\n        let nuevoAlquilerId = 1;\n        try {\n          const resAlquileres = await fetch(\\`\\${API_BASE_URL}/Alquileres\\`);\n          if (resAlquileres.ok) {\n            const alquileresActuales = await resAlquileres.json();\n            if (alquileresActuales.length > 0) {\n              const maxId = Math.max(\n                ...alquileresActuales\n                  .map((a) => Number(a.id))\n                  .filter((id) => !isNaN(id))\n              );\n              if (isFinite(maxId)) {\n                nuevoAlquilerId = maxId + 1;\n              } else {\n                console.warn(\n                  "No se pudo determinar el \xFAltimo ID de alquiler, se usar\xE1 1 o el ID generado por el backend."\n                );\n              }\n            }\n          } else {\n            console.warn(\n              "No se pudieron obtener los alquileres para determinar el nuevo ID. El backend deber\xEDa generar el ID."\n            );\n          }\n        } catch (error) {\n          console.error("Error obteniendo alquileres para ID:", error);\n        }\n\n        const datosAlquiler = {\n          id: 0,\n          FechaEntrega: new Date(fechaEntrega + "T00:00:00").toISOString(),\n          FechaDevolucion: new Date(\n            fechaDevolucion + "T00:00:00"\n          ).toISOString(),\n          TotalPago: totalPago,\n          Estado: "Pendiente",\n          ClienteId: clienteId,\n          UsuarioId: usuarioId,\n          Articulos: detallesArticulos.map((detalle) => ({\n            ArticuloId: detalle.articuloId,\n            Cantidad: detalle.cantidad,\n            CantidadARestar: detalle.disponible - detalle.cantidad,\n          })),\n        };\n\n        console.log("Nuevo ID de alquiler:", datosAlquiler);\n\n        try {\n          const resNuevoAlquiler = await fetch(\\`\\${API_BASE_URL}/AlquilerAdd\\`, {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(datosAlquiler),\n          });\n\n          if (!resNuevoAlquiler.ok) {\n            const errorData = await resNuevoAlquiler.text();\n            throw new Error(\n              \\`Error al guardar alquiler: \\${resNuevoAlquiler.status} - \\${errorData}\\`\n            );\n          }\n          const alquilerGuardado = await resNuevoAlquiler.json();\n          const alquilerIdReal = alquilerGuardado.id;\n\n          for (const detalle of detallesArticulos) {\n            const datosDetalle = {\n              articuloId: detalle.articuloId,\n              cantidad: detalle.cantidad,\n              alquilerId: alquilerIdReal,\n            };\n            const resDetalle = await fetch(\\`\\${API_BASE_URL}/DetalleAlquiler\\`, {\n              method: "POST",\n              headers: { "Content-Type": "application/json" },\n              body: JSON.stringify(datosDetalle),\n            });\n            if (!resDetalle.ok) {\n              const errorDetalle = await resDetalle.text();\n              console.error(\n                \\`Error al guardar detalle para art\xEDculo \\${detalle.articuloId}: \\${errorDetalle}\\`\n              );\n            }\n          }\n\n          alert("Alquiler agregado exitosamente!");\n          closeModal();\n          location.reload();\n        } catch (error) {\n          console.error("Error en el proceso de guardado:", error);\n          alert(\\`Ocurri\xF3 un error: \\${error.message}\\`);\n        } finally {\n          btnGuardar.disabled = false;\n          btnGuardar.textContent = "Guardar Alquiler";\n        }\n      });\n    }\n  });\n<\/script> '])), maybeRenderHead(), renderComponent($$result, "Icon", $$Icon, { "name": "add", "class": "w-6 h-6 mr-2 flex items-center text-[#29b73a96]", "data-astro-cid-qhz7dzok": true }), alquileres.length === 0 ? renderTemplate`<p class="text-center text-gray-600" data-astro-cid-qhz7dzok>No se encontraron alquileres.</p>` : renderTemplate`<div class="overflow-x-auto" data-astro-cid-qhz7dzok> <table id="tablaAlquileres" class="w-full text-sm text-left text-gray-700" data-astro-cid-qhz7dzok> <thead class="text-xs text-pink-800 uppercase bg-gray-50 dark:bg-gray-900 dark:text-pink-500" data-astro-cid-qhz7dzok> <tr data-astro-cid-qhz7dzok> <th class="px-6 py-3" data-astro-cid-qhz7dzok>ID Alquiler</th> <th class="px-6 py-3" data-astro-cid-qhz7dzok>Cliente</th> <th class="px-6 py-3" data-astro-cid-qhz7dzok>Teléfono</th> <th class="px-6 py-3" data-astro-cid-qhz7dzok>Dirección</th> <th class="px-6 py-3" data-astro-cid-qhz7dzok>Fecha Entrega</th> <th class="px-6 py-3" data-astro-cid-qhz7dzok>Fecha Devolución</th> <th class="px-6 py-3" data-astro-cid-qhz7dzok>Total</th> </tr> </thead> <tbody id="tableBody" data-astro-cid-qhz7dzok> ${alquileres.map((alquiler) => renderTemplate`<tr class="border-b bg-[#e9eef6] dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-400" data-astro-cid-qhz7dzok> <td class="px-6 py-4 text-black font-semibold" data-astro-cid-qhz7dzok> ${alquiler.id} </td> <td class="px-6 py-4 text-black" data-astro-cid-qhz7dzok> ${alquiler.cliente?.nombre || "N/A"} </td> <td class="px-6 py-4 text-black" data-astro-cid-qhz7dzok> ${alquiler.cliente?.telefono || "N/A"} </td> <td class="px-6 py-4 text-black" data-astro-cid-qhz7dzok> ${alquiler.cliente?.direccion || "N/A"} </td> <td class="px-6 py-4 text-black" data-astro-cid-qhz7dzok> ${formatDate(alquiler.fechaEntrega)} </td> <td class="px-6 py-4 text-black" data-astro-cid-qhz7dzok> ${formatDate(alquiler.fechaDevolucion)} </td> <td class="px-6 py-4 text-black" data-astro-cid-qhz7dzok>
$${(alquiler.totalPago || 0).toFixed(2)} </td> </tr>`)} </tbody> </table> </div>`);
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/components/GestionAlquiler.astro", void 0);

const $$Astro = createAstro();
const $$Gestion = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Gestion;
  const params = Astro2.url.searchParams;
  const view = params.get("view");
  let SelectedComponent;
  switch (view) {
    case "gestion-usuarios":
      SelectedComponent = $$GestionUsuario;
      break;
    case "gestion-proveedores":
      SelectedComponent = $$GestionProveedor;
      break;
    case "gestion-categorias":
      SelectedComponent = $$GestionCategoria;
      break;
    case "gestion-clientes":
      SelectedComponent = $$GestionCliente;
      break;
    case "gestion-facturas":
      SelectedComponent = $$GestionFacturas;
      break;
    case "gestion-articulos":
      SelectedComponent = $$GestionArticulo;
      break;
    case "gestion-alquileres":
      SelectedComponent = $$GestionAlquiler;
      break;
    default:
      SelectedComponent = $$GestionProveedor;
  }
  const user = await protectRoute(Astro2);
  if (!user) {
    return Astro2.redirect("/");
  }
  return renderTemplate`${renderComponent($$result, "LayoutGestion", $$LayoutGestion, { "data-astro-cid-zmrtbboo": true }, { "default": async ($$result2) => renderTemplate` ${maybeRenderHead()}<div class="flex min-h-screen" data-astro-cid-zmrtbboo> <section class="w-64" data-astro-cid-zmrtbboo> ${renderComponent($$result2, "Sidebar", $$Sidebar, { "currentView": view, "data-astro-cid-zmrtbboo": true })} </section> <main class="flex-1 p-6 overflow-auto" data-astro-cid-zmrtbboo> ${renderSlot($$result2, $$slots["default"])} ${renderComponent($$result2, "SelectedComponent", SelectedComponent, { "data-astro-cid-zmrtbboo": true })} </main> </div> ` })} `;
}, "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/pages/gestion.astro", void 0);

const $$file = "C:/Users/HOME/OneDrive/Escritorio/PROYECTO TERMINADO/AlquilerApp/src/pages/gestion.astro";
const $$url = "/gestion";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Gestion,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
